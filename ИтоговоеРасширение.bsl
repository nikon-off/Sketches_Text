&НаСервере
&Вместо("ВывестиГрафик")
Процедура Расш1_ВывестиГрафик()

	Если Не НеУчитыватьОфисы И ВыбранноеПомещение.Пустая()Тогда
		Если ВыбранноеПомещение.Пустая() Тогда 
			График.Очистить();
			Возврат;
		КонецЕсли;
	КонецЕсли;

	График.Очистить();
	Макет = ПолучитьОбщийМакет("Дев_МакетПланирования"); 
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Менеджер");
	График.Вывести(ОбластьМакета);
	Время = НачалоДня(ОтображаемаяДата) + 32400;
	Часов20 = НачалоДня(ОтображаемаяДата) + 72000;
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Время");  
	
	Пока Время <= Часов20 Цикл                    
		ОбластьМакета.Параметры.Время = Время;
		График.Присоединить(ОбластьМакета);
		Время = Время + ГрадацияШкалыВремени;
	КонецЦикла; 
	
	Запрос = Новый Запрос;

	ОтборПомещений1 = "И ОтсутствияИЗанятости.Помещение = &Помещение";
	ОтборПомещений2 = "И ОтсутствияИЗанятости.Помещение <> &Помещение";
	//ОтборЗанятых = "НЕ";
	ОтборЗанятых = "";
	Запрос.УстановитьПараметр("Помещение", ВыбранноеПомещение); 

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтсутствияИЗанятости.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ВТ_Занятые
	|ИЗ
	|	РегистрСведений.Дев_ОтсутствияИЗанятости КАК ОтсутствияИЗанятости
	|ГДЕ
	|	ОтсутствияИЗанятости.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтсутствияИЗанятости.Пользователь КАК Пользователь,
	|	ОтсутствияИЗанятости.Пользователь.Наименование КАК Наименование,
	|	ОтсутствияИЗанятости.Дата КАК Дата,
	|	ОтсутствияИЗанятости.Вид КАК Вид,
	|	ОтсутствияИЗанятости.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА ОтсутствияИЗанятости.Пользователь = &ТекПользователь
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ТекПользователь
	|ИЗ
	|	РегистрСведений.Дев_ОтсутствияИЗанятости КАК ОтсутствияИЗанятости
	|ГДЕ
	|	ОтсутствияИЗанятости.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ОтсутствияИЗанятости.Пользователь.Подразделение = &Подразделение
	|	И НЕ ОтсутствияИЗанятости.Вид В(&ВидыОтсутствияИЗанятости)
	|	"+ОтборПомещений1+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТекПользователь,
	|	Наименование,
	|	Дата
	|ИТОГИ ПО
	|	Пользователь,
	|	Дата ПЕРИОДАМИ(МИНУТА, &ДатаНачала, &ДатаОкончания)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	CRM_Событие.Ссылка КАК Ссылка,
	|	ТИПЗНАЧЕНИЯ(CRM_Событие.Ссылка) КАК Тип,
	|	CRM_Событие.ВидСобытия КАК ВидСобытия,
	|	CRM_Событие.Дата КАК ДатаНачала,
	|	CRM_Событие.ОкончаниеСобытия КАК ДатаОкончания,
	|	CRM_Событие.Ответственный КАК Менеджер
	|ИЗ
	|	Документ.CRM_Событие КАК CRM_Событие
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(CRM_Событие.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)
	|	И НЕ CRM_Событие.ПометкаУдаления
	|	И НЕ CRM_Событие.ВидСобытия В(&ИсключаемыеВидыСобытий)";
	Если не Событие.Пустая() Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|	И CRM_Событие.Ссылка <> &Событие";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтсутствияИЗанятости.Пользователь КАК Пользователь,
	|	ОтсутствияИЗанятости.Дата КАК Дата,
	|	ОтсутствияИЗанятости.Вид КАК Вид,
	|	ОтсутствияИЗанятости.Помещение КАК Помещение
	|ИЗ
	|	РегистрСведений.Дев_ОтсутствияИЗанятости КАК ОтсутствияИЗанятости
	|ГДЕ
	|	ОтсутствияИЗанятости.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ОтсутствияИЗанятости.Пользователь = &ТекПользователь
	|	"+ОтборПомещений2+"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь,
	|	Пользователи.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА Пользователи.Ссылка = &ТекПользователь
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Подразделение = &Подразделение
	|	И НЕ Пользователи.ПометкаУдаления
	|	И НЕ Пользователи.Недействителен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОтсутствияИЗанятости.Пользователь КАК Количество
	|ИЗ
	|	РегистрСведений.Дев_ОтсутствияИЗанятости КАК ОтсутствияИЗанятости
	|ГДЕ
	|	ОтсутствияИЗанятости.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ДатаНачала, МЕСЯЦ)
	|	И ОтсутствияИЗанятости.Пользователь.Подразделение = &Подразделение
	|	И НЕ ОтсутствияИЗанятости.Вид В (&ВидыОтсутствияИЗанятости)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтсутствияИЗанятости.Пользователь КАК Пользователь,
	|	ОтсутствияИЗанятости.Пользователь.Наименование КАК Наименование,
	|	ОтсутствияИЗанятости.Дата КАК Дата,
	|	ОтсутствияИЗанятости.Вид КАК Вид,
	|	ОтсутствияИЗанятости.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА ОтсутствияИЗанятости.Пользователь = &ТекПользователь
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ТекПользователь
	|ИЗ
	|	РегистрСведений.Дев_ОтсутствияИЗанятости КАК ОтсутствияИЗанятости
	|ГДЕ
	|	ОтсутствияИЗанятости.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ОтсутствияИЗанятости.Пользователь.Подразделение = &Подразделение
	|	И НЕ ОтсутствияИЗанятости.Вид В (&ВидыОтсутствияИЗанятости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Пользователи.Ссылка,
	|	Пользователи.Наименование,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Пользователи.Ссылка = &ТекПользователь
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	ВТ_Занятые КАК ВТ_Занятые
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ВТ_Занятые.Пользователь = Пользователи.Ссылка
	|ГДЕ
	|	Пользователи.Подразделение = &Подразделение
	|	И НЕ Пользователи.ПометкаУдаления
	|	И НЕ Пользователи.Недействителен
	|	И ВТ_Занятые.Пользователь ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТекПользователь,
	|	Наименование,
	|	Дата
	|ИТОГИ ПО
	|	Пользователь,
	|	Дата ПЕРИОДАМИ(МИНУТА, &ДатаНачала, &ДатаОкончания)
	|////////////////////////////////////////////////////////////////////////////////";

	СписокИсключаемыхВидовСобытий = Новый СписокЗначений;
	СписокИсключаемыхВидовСобытий.Добавить(Перечисления.CRM_ВидыСобытий.ТелефонныйЗвонок);
	СписокИсключаемыхВидовСобытий.Добавить(Перечисления.CRM_ВидыСобытий.ОнлайнЗаявка);
	СписокИсключаемыхВидовСобытий.Добавить(Перечисления.CRM_ВидыСобытий.Переписка);
	СписокИсключаемыхВидовСобытий.Добавить(Перечисления.CRM_ВидыСобытий.ЭлектронноеПисьмо);
	СписокИсключаемыхВидовСобытий.Добавить(Перечисления.CRM_ВидыСобытий.ПочтовоеПисьмо);
	
	ВидыОтсутствияИЗанятости = Новый СписокЗначений;
	ВидыОтсутствияИЗанятости.Добавить(Справочники.ВидыОтсутствияИЗанятости.Выходной);
	ВидыОтсутствияИЗанятости.Добавить(Справочники.ВидыОтсутствияИЗанятости.Отпуск);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ОтображаемаяДата) + 32400);
	Запрос.УстановитьПараметр("ДатаОкончания", Часов20);
	Запрос.УстановитьПараметр("ИсключаемыеВидыСобытий", СписокИсключаемыхВидовСобытий); 
	Запрос.УстановитьПараметр("ТекПользователь", Пользователи.ТекущийПользователь());  
	Запрос.УстановитьПараметр("ВидыОтсутствияИЗанятости", ВидыОтсутствияИЗанятости);  
	Если не Событие.Пустая() Тогда 
		Запрос.УстановитьПараметр("Событие", Событие); 
	КонецЕсли;

	ТекущееПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "Подразделение");
	Если ТекущееПодразделение = УПДК_ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("Дев_ПодразделениеПланированияСобытий")Тогда
		Запрос.УстановитьПараметр("Подразделение", УПДК_ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("Дев_ПодразделениеИсполненияСобытий"));
	Иначе
		Запрос.УстановитьПараметр("Подразделение", ТекущееПодразделение);
	КонецЕсли;
	
	ПустаяОблсть = Макет.ПолучитьОбласть("ПустоеВремя");
	ОбластьВремени = Макет.ПолучитьОбласть("Строка|Время");
	
	Результат = Запрос.ВыполнитьПакет();

	ПустаяВыборка = Результат[1].Пустой();

	Выборка = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Пользователь"); 
	ВыборкаПланов = Результат[2].Выбрать();
	ВыборкаТекПользователь = Результат[3].Выбрать();
	ПустойГрафик =  Результат[5].Пустой();

	Если ПустаяВыборка Тогда
		ВыборкаПользователейПодразделения = Результат[4].Выбрать();
	КонецЕсли; 
	
	Если НеУчитыватьОфисы Тогда
		Выборка = Результат[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Пользователь"); 
	КонецЕсли;

	Если Не ПустаяВыборка Или НеУчитыватьОфисы Тогда
		
		Выборка.Сбросить();
		Пока Выборка.Следующий() Цикл  
			ОбластьМакета = Макет.ПолучитьОбласть("Строка|Менеджер");
			ОбластьМакета.Параметры.Менеджер = Выборка.Пользователь;
			График.Вывести(ОбластьМакета);
			Время = НачалоДня(ОтображаемаяДата) + 32400;   
			ВыборкаПоВремени = Выборка.Выбрать();
			Пока Время <= Часов20 Цикл           
				ОтборПоВремени = Новый Структура("Дата", НачалоЧаса(Время)); 
				ВыборкаПоВремени.Сбросить();
				Если ВыборкаПоВремени.НайтиСледующий(ОтборПоВремени) Тогда  
					ЕстьПлан = Ложь;
					ОтборПоМенеджеру = Новый Структура("Менеджер", Выборка.Пользователь);
					ВыборкаПланов.Сбросить();
					Пока ВыборкаПланов.НайтиСледующий(ОтборПоМенеджеру) Цикл
						Если ВыборкаПланов.ДатаНачала <= Время и ВыборкаПланов.ДатаОкончания >= Время Тогда 
							ЕстьПлан = Истина;
						КонецЕсли;
					КонецЦикла;
					
					Если ЕстьПлан Тогда                                                                                         
						График.Присоединить(ПустаяОблсть);
					Иначе
						ОбластьВремени.Параметры.СтруктураВремени = Новый Структура("Менеджер, Время", Выборка.Пользователь, Время);
						График.Присоединить(ОбластьВремени);                                                                        
					КонецЕсли;
				Иначе                                                          
					График.Присоединить(ПустаяОблсть);
				КонецЕсли;
				Время = Время + ГрадацияШкалыВремени;
			КонецЦикла; 
		КонецЦикла;
		
	ИначеЕсли ПустойГрафик Тогда
		
		Пока ВыборкаПользователейПодразделения.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Строка|Менеджер");
			ОбластьМакета.Параметры.Менеджер = ВыборкаПользователейПодразделения.Пользователь;
			График.Вывести(ОбластьМакета);
			Время = НачалоДня(ОтображаемаяДата) + 32400;
			Пока Время <= Часов20 Цикл           
				ЕстьПлан = Ложь;
				ОтборПоМенеджеру = Новый Структура("Менеджер", ВыборкаПользователейПодразделения.Пользователь);
				ВыборкаПланов.Сбросить();
				Пока ВыборкаПланов.НайтиСледующий(ОтборПоМенеджеру) Цикл
					Если ВыборкаПланов.ДатаНачала <= Время и ВыборкаПланов.ДатаОкончания >= Время Тогда 
						ЕстьПлан = Истина;
					КонецЕсли;
				КонецЦикла;
				
				Если ЕстьПлан Тогда                                                                                         
					График.Присоединить(ПустаяОблсть);
				Иначе
					ОбластьВремени.Параметры.СтруктураВремени = Новый Структура("Менеджер, Время", ВыборкаПользователейПодразделения.Пользователь, Время);
					График.Присоединить(ОбластьВремени);                                                                        
				КонецЕсли;
				Время = Время + ГрадацияШкалыВремени;
			КонецЦикла; 
		КонецЦикла;
		
	КонецЕсли;
	
	График.ФиксацияСверху = 4;
	График.ФиксацияСлева = 2;
	
КонецПроцедуры


