
&Вместо("СформироватьМассивЗадач")
Процедура Расш1_СформироватьМассивЗадач(БизнесПроцесс, ТочкаМаршрутаБизнесПроцесса, МассивИсходящихТочек, ФормируемыеЗадачи, Задача, ТаблицаЭтапов, Отказ, СтандартнаяОбработка, ОтложитьСледующийЭтап)
	
	Для Каждого ЗначениеМассива ИЗ МассивИсходящихТочек Цикл
		
		ФормируемыеЗадачиПоТочке = Новый Массив;
		
		Если Отказ Тогда
			ТекстСообщения = НСтр("ru = 'Для точки вложенного бизнес-процесса ""'")+ЗначениеМассива.ИсходящаяТочка.Наименование + НСтр("ru = '"" не указан процесс.
			|Сорректируйте маршрут бизнес-процесса:'") + " " + СокрЛП(БизнесПроцесс);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Прервать;
		Иначе
			
			Если ЗначениеМассива.ИсходящаяТочка.Вид = Перечисления.CRM_ВидыТочекМаршрута.Действие Тогда
				
				CRM_БизнесПроцессыПереопределяемый.ОбработчикТочкиДействияПередСозданиемЗадач(БизнесПроцесс ,ЗначениеМассива.ИсходящаяТочка, ФормируемыеЗадачиПоТочке, СтандартнаяОбработка);
				
			ИначеЕсли ЗначениеМассива.ИсходящаяТочка.Вид = Перечисления.CRM_ВидыТочекМаршрута.ВложенныйБизнесПроцесс Тогда
				
				CRM_БизнесПроцессыПереопределяемый.ОбработчикТочкиВложенныйБизнесПроцессПередСозданиемЗадач(БизнесПроцесс ,ЗначениеМассива.ИсходящаяТочка, ФормируемыеЗадачиПоТочке, СтандартнаяОбработка);
				
			КонецЕсли;
			
			Если СтандартнаяОбработка Тогда
			
				Если ТаблицаЭтапов = Неопределено Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					|	CRM_НастройкиЭтаповБизнесПроцессов.Объект,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ТочкаМаршрута,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ВариантВыполнения,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ВариантВыполненияСтрокой,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ДлительностьДней,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ДлительностьЧасов,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ДлительностьМинут,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ОтложитьНачалоЭтапаДней,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ОтложитьНачалоЭтапаЧасов,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ОтложитьНачалоЭтапаМинут,
					|	CRM_НастройкиЭтаповБизнесПроцессов.Используется,
					|	CRM_НастройкиЭтаповБизнесПроцессов.Задание,
					|	CRM_НастройкиЭтаповБизнесПроцессов.Порядок,
					|	CRM_НастройкиЭтаповБизнесПроцессов.Шаблон,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ИсполнительСтрокой,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ДатаНачала,
					|	CRM_НастройкиЭтаповБизнесПроцессов.ДатаВыполнения
					|ИЗ
					|	РегистрСведений.CRM_НастройкиЭтаповБизнесПроцессов КАК CRM_НастройкиЭтаповБизнесПроцессов
					|ГДЕ
					|	CRM_НастройкиЭтаповБизнесПроцессов.Объект = &Объект";
					
					Запрос.УстановитьПараметр("Объект",БизнесПроцесс);
					ТаблицаЭтапов = Запрос.Выполнить().Выгрузить();
				КонецЕсли;
				
				СтрокаЭтапа = ТаблицаЭтапов.Найти(ЗначениеМассива.ИсходящаяТочка, "ТочкаМаршрута");
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	CRM_ИсполнителиЭтаповБизнесПроцессов.Объект,
				|	CRM_ИсполнителиЭтаповБизнесПроцессов.ТочкаМаршрута,
				|	CRM_ИсполнителиЭтаповБизнесПроцессов.Исполнитель,
				|	CRM_ИсполнителиЭтаповБизнесПроцессов.Все
				|ИЗ
				|	РегистрСведений.CRM_ИсполнителиЭтаповБизнесПроцессов КАК CRM_ИсполнителиЭтаповБизнесПроцессов
				|ГДЕ
				|	CRM_ИсполнителиЭтаповБизнесПроцессов.Объект = &Объект
				|	И CRM_ИсполнителиЭтаповБизнесПроцессов.ТочкаМаршрута = &ТочкаМаршрута";
				Запрос.УстановитьПараметр("Объект"			, БизнесПроцесс);
				Запрос.УстановитьПараметр("ТочкаМаршрута"	, ЗначениеМассива.ИсходящаяТочка);
				
				ТаблицаИсполнителей = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаИсполнителя ИЗ ТаблицаИсполнителей Цикл
					СтруктураИсполнителя = ПолучитьАдресациюЗадачи(СтрокаИсполнителя, БизнесПроцесс, ЗначениеМассива.ИсходящаяТочка, Задача);
					
					СписокИсполнителейРоли = Неопределено;
					Если СтрокаИсполнителя.Все И ЗначениеЗаполнено(СтруктураИсполнителя.РольИсполнителя) Тогда
						СписокИсполнителейРоли = ПолучитьВозможныхИсполнителейПоРоли(СтруктураИсполнителя.РольИсполнителя);
					КонецЕсли;
					
					НомерПоследнейИтерации = ПолучитьИтерациюЗадачи(БизнесПроцесс, ЗначениеМассива.ИсходящаяТочка);
					
					МассивСтруктурИсполнителей = Новый Массив;
					Если СписокИсполнителейРоли = Неопределено Тогда
						МассивСтруктурИсполнителей.Добавить(СтруктураИсполнителя);
					Иначе
						Для Каждого ЭлементСписка ИЗ СписокИсполнителейРоли Цикл
							СтруктураИсполнителяРоли = Новый Структура("Исполнитель, РольИсполнителя, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации");
							СтруктураИсполнителяРоли.Исполнитель					= ЭлементСписка.Значение;
							СтруктураИсполнителяРоли.РольИсполнителя				= Справочники.РолиИсполнителей.ПустаяСсылка();
							СтруктураИсполнителяРоли.ОсновнойОбъектАдресации		= Неопределено;
							СтруктураИсполнителяРоли.ДополнительныйОбъектАдресации	= Неопределено;
							МассивСтруктурИсполнителей.Добавить(СтруктураИсполнителяРоли);
						КонецЦикла;
					КонецЕсли;
					
					Для Каждого СтруктураИсполнителя ИЗ МассивСтруктурИсполнителей Цикл
					
						НоваяЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
						НоваяЗадача.БизнесПроцесс					= БизнесПроцесс;
						
						// Для бизнес-процесса на основании предопределенной карты "Поручение" наименование задачи формируем по своему.
						Если БизнесПроцесс.КартаМаршрута = Справочники.CRM_КартыМаршрутов.Поручение Тогда
							Если ЗначениеМассива.ИсходящаяТочка.Имя = "Действие1" Тогда
								НоваяЗадача.Наименование			= БизнесПроцесс.Наименование;
							ИначеЕсли ЗначениеМассива.ИсходящаяТочка.Имя = "Действие2" Тогда
								НоваяЗадача.Наименование			= "Проверить: """+БизнесПроцесс.Наименование+"""";
							Иначе
								НоваяЗадача.Наименование			= ЗначениеМассива.ИсходящаяТочка.Наименование;
							КонецЕсли;
						Иначе
							НоваяЗадача.Наименование				= БизнесПроцесс.Наименование + " ("+ЗначениеМассива.ИсходящаяТочка.Наименование+")";
						КонецЕсли;
						НоваяЗадача.CRM_Проект						= БизнесПроцесс.Проект;
						НоваяЗадача.CRM_Партнер						= БизнесПроцесс.Партнер;
						НоваяЗадача.КонтактноеЛицо					= БизнесПроцесс.КонтактноеЛицо;
						НоваяЗадача.Телефон							= БизнесПроцесс.Телефон;						
						НоваяЗадача.ТочкаМаршрута					= ТочкаМаршрутаБизнесПроцесса;
						НоваяЗадача.CRM_ТочкаМаршрута				= ЗначениеМассива.ИсходящаяТочка;
						НоваяЗадача.CRM_Итерация					= НомерПоследнейИтерации + 1;
						НоваяЗадача.Описание						= СтрокаЭтапа.Задание;
						НоваяЗадача.Дата							= ТекущаяДатаСеанса();
						
						СтруктураДлительностиНачалоПериода = Новый Структура();
						СтруктураДлительностиНачалоПериода.Вставить("Дней"	,СтрокаЭтапа.ОтложитьНачалоЭтапаДней);
						СтруктураДлительностиНачалоПериода.Вставить("Часов"	,СтрокаЭтапа.ОтложитьНачалоЭтапаЧасов);
						СтруктураДлительностиНачалоПериода.Вставить("Минут"	,СтрокаЭтапа.ОтложитьНачалоЭтапаМинут);
						//СтруктураДлительностиНачалоПериода.Вставить("Минут"	,СтрокаЭтапа.ОтложитьНачалоЭтапаМинут + 1); //Добавляем минуту чтобы корректно расчитывалась дата начала; не требуется
						
						Если НЕ ОтложитьСледующийЭтап = Неопределено Тогда
							НоваяЗадача.ДатаНачала = ОтложитьСледующийЭтап;
						Иначе
							НоваяЗадача.ДатаНачала = CRM_ОбщегоНазначенияСервер.ПолучитьДатуПоКалендарю(ТекущаяДатаСеанса(),СтруктураДлительностиНачалоПериода,,БизнесПроцесс.Организация);
						КонецЕсли;
						
						Если БизнесПроцесс.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная Тогда
							НоваяЗадача.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
						ИначеЕсли БизнесПроцесс.Важность = Перечисления.ВариантыВажностиВзаимодействия.Высокая Тогда
							НоваяЗадача.Важность = Перечисления.ВариантыВажностиЗадачи.Высокая;
						ИначеЕсли БизнесПроцесс.Важность = Перечисления.ВариантыВажностиВзаимодействия.Низкая Тогда
							НоваяЗадача.Важность = Перечисления.ВариантыВажностиЗадачи.Низкая;
						КонецЕсли;
						
						//НоваяЗадача.ДатаНачала = НоваяЗадача.ДатаНачала - 60; //Вычитаем ранее добавленую минуту
						
						//Если ОтложитьСледующийЭтап = Неопределено И ЗначениеЗаполнено(СтрокаЭтапа.ДатаВыполнения) Тогда
						//	НоваяЗадача.СрокИсполнения				= ?(СтрокаЭтапа.ДатаВыполнения < ТекущаяДатаСеанса(),ТекущаяДатаСеанса(),СтрокаЭтапа.ДатаВыполнения);
						//	
						//	Если НоваяЗадача.СрокИсполнения < НоваяЗадача.ДатаНачала Тогда
						//		 НоваяЗадача.СрокИсполнения = НоваяЗадача.ДатаНачала;
						//	КонецЕсли;
						//	
						//Иначе
							НачПериода = НоваяЗадача.ДатаНачала;
							
							СтруктураДлительностиКонПериода = Новый Структура();
							СтруктураДлительностиКонПериода.Вставить("Дней"	,СтрокаЭтапа.ДлительностьДней);
							СтруктураДлительностиКонПериода.Вставить("Часов",СтрокаЭтапа.ДлительностьЧасов);
							СтруктураДлительностиКонПериода.Вставить("Минут",СтрокаЭтапа.ДлительностьМинут);
							
							КонПериода	= CRM_ОбщегоНазначенияСервер.ПолучитьДатуПоКалендарю(НачПериода,СтруктураДлительностиКонПериода,,БизнесПроцесс.Организация);
							
							НоваяЗадача.СрокИсполнения				= КонПериода;
						//КонецЕсли;
						НоваяЗадача.CRM_ВариантВыполнения			= СтрокаЭтапа.ВариантВыполнения;
						НоваяЗадача.CRM_ВариантВыполненияСтрокой	= СтрокаЭтапа.ВариантВыполненияСтрокой;
						НоваяЗадача.Автор							= Пользователи.ТекущийПользователь();
						НоваяЗадача.Исполнитель						= СтруктураИсполнителя.Исполнитель;
						НоваяЗадача.РольИсполнителя					= СтруктураИсполнителя.РольИсполнителя;
						НоваяЗадача.ОсновнойОбъектАдресации			= СтруктураИсполнителя.ОсновнойОбъектАдресации;
						НоваяЗадача.ДополнительныйОбъектАдресации	= СтруктураИсполнителя.ДополнительныйОбъектАдресации;
						Если ЗначениеЗаполнено(БизнесПроцесс.Предмет) Тогда
							НоваяЗадача.Предмет							= БизнесПроцесс.Предмет;
						Иначе
							НоваяЗадача.Предмет							= БизнесПроцесс;	
						КонецЕсли;
						
						//++Никонов по задаче enco-283
						Если Не ЗначениеЗаполнено(СтруктураИсполнителя.Исполнитель) Тогда
							Если ЗначениеЗаполнено(СтруктураИсполнителя.РольИсполнителя) Тогда
								КартаМаршрута = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БизнесПроцесс, "КартаМаршрута");
								Если УПДК_БизнесПроцессыИЗадачиПовтИсп.ИспользуетсяРаспределениеЗадач(СтруктураИсполнителя.РольИсполнителя, КартаМаршрута,НоваяЗадача.Предмет) Тогда
									БизнесПроцессыИЗадачиСервер.РаспределитьНаИсполнителя(СтруктураИсполнителя.РольИсполнителя, КартаМаршрута, НоваяЗадача.Предмет, НоваяЗадача.Исполнитель);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						//--Никонов
						
						ФормируемыеЗадачиПоТочке.Добавить(НоваяЗадача);
						
					КонецЦИкла;
				КонецЦикла;
			КонецЕсли;
			
			Если ЗначениеМассива.ИсходящаяТочка.Вид = Перечисления.CRM_ВидыТочекМаршрута.Действие Тогда
				
				ОчиститьМассивЗадач= Ложь;
				CRM_БизнесПроцессыПереопределяемый.ОбработчикТочкиДействияПриСозданииЗадач(БизнесПроцесс ,ЗначениеМассива.ИсходящаяТочка, ФормируемыеЗадачиПоТочке, ОчиститьМассивЗадач);
				
				Если НЕ ОчиститьМассивЗадач Тогда
					Для Каждого ЭлементМассива ИЗ ФормируемыеЗадачиПоТочке Цикл
						ФормируемыеЗадачи.Добавить(ЭлементМассива);
					КонецЦИкла;
				КонецЕсли;
				
			ИначеЕсли ЗначениеМассива.ИсходящаяТочка.Вид = Перечисления.CRM_ВидыТочекМаршрута.ВложенныйБизнесПроцесс Тогда
				
				ОчиститьМассивЗадач= Ложь;
				CRM_БизнесПроцессыПереопределяемый.ОбработчикТочкиВложенныйБизнесПроцессПриСозданииЗадач(БизнесПроцесс ,ЗначениеМассива.ИсходящаяТочка, ФормируемыеЗадачиПоТочке, ОчиститьМассивЗадач);
				
				Если НЕ ОчиститьМассивЗадач Тогда
					Для Каждого ЭлементМассива ИЗ ФормируемыеЗадачиПоТочке Цикл
						ФормируемыеЗадачи.Добавить(ЭлементМассива);
					КонецЦИкла;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ФормируемыеЗадачи.Количество() = 0 Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не создано ни одной задачи в точке бизнес-процесса ""'")+ЗначениеМассива.ИсходящаяТочка.Наименование;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // СформироватьМассивЗадач()
