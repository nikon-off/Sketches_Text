
&Вместо("АвтоСтартБизнесПроцессовПриЗаписи")
Процедура Расш1_АвтоСтартБизнесПроцессовПриЗаписи(Источник, Отказ)
		
	Если Отказ ИЛИ Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ЭтоИсточникАвтостарта(Источник) Тогда
		Возврат;
	КонецЕсли;	
	
	ЭтоНовый = Источник.ДополнительныеСвойства.ЭтоНовый;
	РежимЗаписи = Источник.ДополнительныеСвойства.РежимЗаписи;
	
	Если ЭтоНовый Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиАвтоСтартаБизнесПроцессов.Проект,
		|	НастройкиАвтоСтартаБизнесПроцессов.ТочкаСтарта
		|ИЗ
		|	РегистрСведений.УПДК_НастройкиАвтоСтартаБизнесПроцессов КАК НастройкиАвтоСтартаБизнесПроцессов
		|ГДЕ
		|	НастройкиАвтоСтартаБизнесПроцессов.ТипДокумента = &ТипДокумента";
		
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(Источник));
		Запрос.УстановитьПараметр("ТипДокумента", ИдентификаторОбъектаМетаданных);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			МенеджерЗаписи = РегистрыСведений.УПДК_ИсторияАвтоСтартаБизнесПроцессов.СоздатьМенеджерЗаписи();
			
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДетальныеЗаписи);
			МенеджерЗаписи.ДокументИсточник = Источник.Ссылка;
			МенеджерЗаписи.Стартован = Ложь;
			МенеджерЗаписи.Записать();
			
		КонецЦикла;
		
	КонецЕсли;

	МетаданныеДокумента = Источник.Ссылка.Метаданные();
	РазрешеноПроведение = (МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить);
	
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение И РазрешеноПроведение Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияАвтоСтартаБизнесПроцессов.Проект КАК Проект,
		|	ИсторияАвтоСтартаБизнесПроцессов.ТочкаСтарта КАК ТочкаСтарта,
		|	ЕСТЬNULL(НастройкиАвтоСтартаБизнесПроцессов.ОбработчикСтарта, """") КАК ОбработчикСтарта
		|ИЗ
		|	РегистрСведений.УПДК_ИсторияАвтоСтартаБизнесПроцессов КАК ИсторияАвтоСтартаБизнесПроцессов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПДК_НастройкиАвтоСтартаБизнесПроцессов КАК НастройкиАвтоСтартаБизнесПроцессов
		|		ПО ИсторияАвтоСтартаБизнесПроцессов.Проект.CRM_КартаМаршрута = НастройкиАвтоСтартаБизнесПроцессов.Проект.CRM_КартаМаршрута
		|			И (&ТипДокумента = НастройкиАвтоСтартаБизнесПроцессов.ТипДокумента)
		|ГДЕ
		|	НЕ ИсторияАвтоСтартаБизнесПроцессов.Стартован
		|	И ИсторияАвтоСтартаБизнесПроцессов.ДокументИсточник = &ДокументИсточник";
	
	Запрос.УстановитьПараметр("ДокументИсточник", Источник.Ссылка);
	ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(Источник));
	Запрос.УстановитьПараметр("ТипДокумента", ИдентификаторОбъектаМетаданных);		
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Стартуем бизнес процесс
		
		ПрерватьСтартБизнесПроцесса = Ложь;
		
		Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.ОбработчикСтарта) Тогда
			Выполнить(ВыборкаДетальныеЗаписи.ОбработчикСтарта);
		КонецЕсли;
		
		Если ПрерватьСтартБизнесПроцесса Тогда
			Продолжить;
		КонецЕсли;
		
		БизнесПроцесс = ПолучитьАктуальныйБизнесПроцесс(Источник.Ссылка, ПолучитьПредметБППоДокументу(Источник.Ссылка),ВыборкаДетальныеЗаписи.Проект.CRM_КартаМаршрута);
				
		Если Не ЗначениеЗаполнено(БизнесПроцесс) Тогда
			
			НовыйБизнесПроцесс = CRM_БизнесПроцессыСервер.ПроверитьНаличиеПроектаСтартоватьБизнесПроцесс(Источник.Ссылка, ВыборкаДетальныеЗаписи.Проект, ВыборкаДетальныеЗаписи.ТочкаСтарта);
			
			Если НовыйБизнесПроцесс = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			БизнесПроцесс = НовыйБизнесПроцесс.БизнесПроцесс;
			
		КонецЕсли; 		
		
		//Очищаем запись о том, что нужно стартовать, если бизнес процесс стартован
		МенеджерЗаписи = РегистрыСведений.УПДК_ИсторияАвтоСтартаБизнесПроцессов.СоздатьМенеджерЗаписи();
		
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДетальныеЗаписи);
		МенеджерЗаписи.ДокументИсточник = Источник.Ссылка;
		МенеджерЗаписи.Стартован = Истина;
		МенеджерЗаписи.БизнесПроцесс = БизнесПроцесс;
		МенеджерЗаписи.Записать(); 
		
		//++Никонов по задаче enco-283
		Исполнитель = Неопределено;
		
		Если НовыйБизнесПроцесс = Неопределено Тогда
			ТекущаяЗадача = ПолучитьЗадачуПоБп(БизнесПроцесс);
		Иначе
			ТекущаяЗадача = НовыйБизнесПроцесс.Задача;
		КонецЕсли;
		
        Если Не ТекущаяЗадача = Неопределено Тогда
            СтруктураЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущаяЗадача,"РольИсполнителя, БизнесПроцесс.КартаМаршрута, Исполнитель");
            Если Не ЗначениеЗаполнено(СтруктураЗадачи.Исполнитель) Тогда
                Если ЗначениеЗаполнено(СтруктураЗадачи.РольИсполнителя) Тогда
                    Если УПДК_БизнесПроцессыИЗадачиПовтИсп.ИспользуетсяРаспределениеЗадач(СтруктураЗадачи.РольИсполнителя, СтруктураЗадачи.БизнесПроцессКартаМаршрута, Источник.Ссылка) Тогда
                        БизнесПроцессыИЗадачиСервер.РаспределитьНаИсполнителя(СтруктураЗадачи.РольИсполнителя, СтруктураЗадачи.БизнесПроцессКартаМаршрута, Источник.Ссылка, Исполнитель);
                        Если Не Исполнитель = Неопределено Тогда
                            СтруктураЗаполения = Новый Структура("Исполнитель", Исполнитель);
                            УПДК_ОбщегоНазначения.ЗаписатьДанныеВОбъектСБлокировкой(НовыйБизнесПроцесс.Задача, СтруктураЗаполения);
                        КонецЕсли;
                    КонецЕсли;
                КонецЕсли; 
            КонецЕсли;
        КонецЕсли;
		
		//--Никонов
		
	КонецЦикла; 	
	
КонецПроцедуры 

Функция ПолучитьЗадачуПоБп(БизнесПроцесс)
	
	Стартован = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БизнесПроцесс, "Стартован");
	
	Если Стартован Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("БизнесПроцесс",БизнесПроцесс);
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЗадачаИсполнителя.Ссылка
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
		|	И НЕ ЗадачаИсполнителя.Выполнена";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

