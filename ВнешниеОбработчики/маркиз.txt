ТочкаСтарта = ПараметрыВнешнегоИнтерфейса.ТочкаСтарта;
КартаМаршрута = ПараметрыВнешнегоИнтерфейса.КартаМаршрута;
Тема = ПараметрыВнешнегоИнтерфейса.Тема;
Организация = ПараметрыВнешнегоИнтерфейса.Организация;
Автор = ПараметрыВнешнегоИнтерфейса.Автор;
КаналИсточника = ПараметрыВнешнегоИнтерфейса.КаналИсточника;
СоздатьНовуюСделку = ПараметрыВнешнегоИнтерфейса.СоздатьНовуюСделку;
//ПроектСобытия = ПараметрыВнешнегоИнтерфейса.ПроектСобытия;

ТекущаяДатаСеанса = ТекущаяДатаСеанса();
ТелоКакСтрока = Запрос.ПолучитьТелоКакСтроку();

ЗаписьЖурнала = РегистрыСведений.ЖурналОбменаAPI.ДобавитьЗапросВЖурнал("Marquiz", ТекущаяДатаСеанса, ТелоКакСтрока);

ЧтениеJSON	= Новый ЧтениеJSON;	
ЧтениеJSON.УстановитьСтроку(ТелоКакСтрока); 		
ИнформацияОСобытии = ПрочитатьJSON(ЧтениеJSON,Истина);		
ЧтениеJSON.Закрыть();

phone = ИнформацияОСобытии.Получить("contacts").Получить("phone");
name = ИнформацияОСобытии.Получить("contacts").Получить("name");

question = "";

Для Каждого ТекВопрос из ИнформацияОСобытии.Получить("answers") Цикл
	
	Вопрос = ТекВопрос.Получить("q");
	Ответ = ТекВопрос.Получить("a");
	
	Если ТипЗнч(Ответ) = Тип("Массив") Тогда
		
		мОтвет = Ответ;
		Ответ = "";
		Для Каждого ТекСтр из мОтвет Цикл
			
			Ответ = Ответ + ?(Ответ = "", "", ", ") + ТекСтр;
			
		КонецЦикла;
		
	КонецЕсли;
	
	question = question + ?(question = "",Символы.ПС,Символы.ПС + Символы.ПС) + "В: " +  Вопрос + Символы.ПС + "О: " + Ответ; 
	
КонецЦикла;

question = question + Символы.ПС;

form_page = "";

Попытка ref_host = ИнформацияОСобытии.Получить("extra").Получить("href"); Исключение ref_host = ""; КонецПопытки;
Попытка utm_source = ИнформацияОСобытии.Получить("extra").Получить("utm").Получить("source"); Исключение utm_source = ""; КонецПопытки;
Попытка utm_medium = ИнформацияОСобытии.Получить("extra").Получить("utm").Получить("medium"); Исключение utm_medium = ""; КонецПопытки;
Попытка utm_campaign = ИнформацияОСобытии.Получить("extra").Получить("utm").Получить("campaign"); Исключение utm_campaign = ""; КонецПопытки;
Попытка utm_content = ИнформацияОСобытии.Получить("extra").Получить("utm").Получить("content"); Исключение utm_content = ""; КонецПопытки;
Попытка utm_term = ИнформацияОСобытии.Получить("extra").Получить("utm").Получить("term"); Исключение utm_term = ""; КонецПопытки;
Попытка roistat_visit = ИнформацияОСобытии.Получить("extra").Получить("cookies").Получить("roistat_visit"); Исключение roistat_visit = ""; КонецПопытки;

Если Не ЗначениеЗаполнено(utm_campaign) Тогда
	utm_campaign = "Прямые переходы на сайт";
КонецЕсли;

НомерТелефона = Прав(сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(phone), 10); 

НачатьТранзакцию();

Попытка
	
	ТелефонПоМаске = Справочники.ШаблоныНомеровТелефонов.ОбработатьНомерТелефонаПоМаске(НомерТелефона);
		
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("БизнесПроцесс.CRM_БизнесПроцесс");
	ЭлементБлокировки.УстановитьЗначение("Телефон", ТелефонПоМаске);
	Блокировка.Заблокировать();	
		
	БизнесПроцесс = БизнесПроцессы.CRM_БизнесПроцесс.СоздатьБизнесПроцесс();
	
	БизнесПроцесс.КартаМаршрута = КартаМаршрута;
	БизнесПроцесс.ДатаСтарта = ТекущаяДатаСеанса;
	БизнесПроцесс.Наименование = Тема;
	БизнесПроцесс.Организация = Организация; 
	БизнесПроцесс.Дата = ТекущаяДатаСеанса;
	БизнесПроцесс.Состояние = Перечисления.СостоянияБизнесПроцессов.Активен;
	БизнесПроцесс.НомерВерсииКартыМаршрута = КартаМаршрута.НомерВерсии;
	БизнесПроцесс.ТочкаСтарта = ТочкаСтарта;
	БизнесПроцесс.Автор = Автор;
	БизнесПроцесс.Телефон = ТелефонПоМаске;
	
	ЗаполнитьЗначенияСвойств(БизнесПроцесс, УПДК_ФизическиеЛица.ПоискКлиентаПоНомеруТелефона(НомерТелефона));
	
					Если СоздатьНовуюСделку Тогда
						НовыйКлиент = Ложь;
					КонецЕсли;
	
	Если Не ЗначениеЗаполнено(БизнесПроцесс.Партнер) Тогда                           
		
		ФИО = name;
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ФИО, " ");
		
		КоличествоСлов = МассивПодстрок.Количество();
		
		Фамилия = "";
		Имя = "";
		Отчество = "";
		
		Если КоличествоСлов > 0 Тогда		
			Фамилия = МассивПодстрок[0]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 1 Тогда		
			Имя = МассивПодстрок[1]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 2 Тогда
			
			Отчество = "";
			
			Для Счетчик = 2 по КоличествоСлов-1 Цикл
				Отчество = Отчество + " " + МассивПодстрок[Счетчик];
			КонецЦикла;
			
			Отчество = СокрЛП(Отчество);
			
		КонецЕсли;
		
		НовФизлицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
		УправлениеКонтактнойИнформацией.ДобавитьНовыйТелефон(НовФизлицо, НомерТелефона);
		НовФизлицо.Фамилия = Фамилия;
		НовФизлицо.Имя = Имя;
		НовФизлицо.Отчество = Отчество; 	
		НовФизлицо.Наименование = ФИО;
		НовФизлицо.Записать(); 
		
		НовКонтакт = Справочники.Партнеры.СоздатьЭлемент();
		НовКонтакт.ДатаРегистрации = ТекущаяДатаСеанса;
		НовКонтакт.Наименование = ФИО;
		НовКонтакт.CRM_ФизЛицо = Истина;
		НовКонтакт.ВидПартнера = Перечисления.ВидПартнера.ЧастноеЛицо;				
		НовКонтакт.ОсновноеКонтактноеЛицо = НовФизлицо.Ссылка;
		
		НовКЛ = НовКонтакт.КонтактныеЛица.Добавить();
		НовКл.ФизЛицо = НовФизлицо.Ссылка;
		НовКл.ПравоПодписи = Истина;
		
		НовКонтакт.Записать();
		
		РегистрыСведений.СтатусыКлиентов.УстановитьСтатусКлиента(НовКонтакт.Ссылка, Перечисления.СтатусыКлиента.Контакт);
		
		БизнесПроцесс.Партнер = НовКонтакт.Ссылка;

		Если СоздатьНовуюСделку Тогда
			НовыйКлиент = Истина;
		КонецЕсли;		
		
	КонецЕсли;	
	
	БизнесПроцесс.Основание = БизнесПроцесс.Партнер;	
	
	БизнесПроцесс.Записать();
	БизнесПроцесс.Старт();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачаИсполнителя.Ссылка КАК Ссылка
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс";
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();  
	
	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда 		
		Перейти ~КонецОбработки;
	КонецЕсли;
	
	ЗадачаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	
	Комментарий = "Представление клиента: " + name + Символы.ПС + question;
		
	ЗадачаОбъект.Описание = Тема + Символы.ПС + Комментарий; 		
	
	Если ЗначениеЗаполнено(ref_host) Тогда
		ЗадачаОбъект.Описание = ЗадачаОбъект.Описание + Символы.ПС + ref_host;
	КонецЕсли;  
	
	
	//Создаем Событие
	СвязанноеСобытие = Документы.CRM_Событие.СоздатьДокумент();
	
	ДанныеЗаполнения = Новый Структура;
	
	ДанныеЗаполнения.Вставить("Партнер", 			БизнесПроцесс.Партнер);
	ДанныеЗаполнения.Вставить("КонтактноеЛицо", 	БизнесПроцесс.КонтактноеЛицо);
	ДанныеЗаполнения.Вставить("Предмет", 			БизнесПроцесс.ОбъектНедвижимости);
//	ДанныеЗаполнения.Вставить("Проект", 			ПроектСобытия);
	ДанныеЗаполнения.Вставить("Автор", 				Автор);
	ДанныеЗаполнения.Вставить("Ответственный", 		Автор);
	ДанныеЗаполнения.Вставить("Место", 				БизнесПроцесс.Телефон);
	
	СвязанноеСобытие.Заполнить(ДанныеЗаполнения);
	
	СвязанноеСобытие.СвязаннаяЗадача = ЗадачаОбъект.Ссылка; 		
	СвязанноеСобытие.Описание = ЗадачаОбъект.Описание; 		
	СвязанноеСобытие.Тема = Тема; 		
	СвязанноеСобытие.СостояниеСобытия = Справочники.CRM_СостоянияСобытий.Запланировано;
	СвязанноеСобытие.Записать();
	
	Если Не НовыйКлиент Тогда
					Документы.Сделка.ДобавитьНовуюСделку(СвязанноеСобытие.Ссылка);
				КонецЕсли;
	
	ЗадачаОбъект.СвязанноеСобытие = СвязанноеСобытие.Ссылка; 
	ЗадачаОбъект.Предмет 		  = СвязанноеСобытие.Ссылка; 
	
	ЗадачаОбъект.Записать();
	
	БизнесПроцесс.Предмет 		= СвязанноеСобытие.Ссылка;
	БизнесПроцесс.Записать();
	
	СтруктураМеток = Новый Структура; 	
	СтруктураМеток.Вставить("utm_source", 	utm_source);
	СтруктураМеток.Вставить("utm_medium", 	utm_medium);
	СтруктураМеток.Вставить("utm_campaign", utm_campaign);
	СтруктураМеток.Вставить("utm_term", 	utm_term);
	СтруктураМеток.Вставить("utm_content", 	utm_content);
	
	КаналИсточникИнтереса = УПДК_Маркетинг.НайтиСоздатьКаналИсточникИнтереса(СтруктураМеток);
	КаналСсылка 		  = КаналИсточникИнтереса.КаналИнтереса;	
	ИсточникСсылка 		  = КаналИсточникИнтереса.ИсточникИнтереса;
	
	
	НаборЗаписей = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сделка.Установить(БизнесПроцесс.Ссылка);			
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период 					= ТекущаяДатаСеанса;
	Запись.КаналПервичногоИнтереса 	= КаналИсточника;
	Запись.КаналИнтереса 			= КаналСсылка;
	Запись.ИсточникИнтереса 		= ИсточникСсылка;	
	Запись.Партнер 					= БизнесПроцесс.Партнер;
	Запись.Сделка 					= БизнесПроцесс.Ссылка;
	
	НаборЗаписей.Записать();

	НаборЗаписей = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сделка.Установить(СвязанноеСобытие.Ссылка);			
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период 					= ТекущаяДатаСеанса;
	Запись.КаналПервичногоИнтереса 	= КаналИсточника;
	Запись.КаналИнтереса 			= КаналСсылка;
	Запись.ИсточникИнтереса 		= ИсточникСсылка;	
	Запись.Сделка 					= СвязанноеСобытие.Ссылка;	
	Запись.Партнер 					= БизнесПроцесс.Партнер;
	
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ДанныеКонтекстнойРекламы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Клиент.Установить(БизнесПроцесс.Партнер);	
	НаборЗаписей.Отбор.Период.Установить(ТекущаяДатаСеанса);
	НаборЗаписей.Отбор.Основание.Установить(БизнесПроцесс.Ссылка);
		
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекущаяДатаСеанса;
	Запись.Клиент = БизнесПроцесс.Партнер;
	ЗаполнитьЗначенияСвойств(Запись, СтруктураМеток);	
	Запись.Домен              = form_page;
	Запись.ПосадочнаяСтраница = ref_host;
	Запись.ИсточникИнтереса   = ИсточникСсылка;
	Запись.Основание          = БизнесПроцесс.Ссылка;
		
	НаборЗаписей.Записать();

	
	Если ЗначениеЗаполнено(roistat_visit) Тогда
		
		НаборЗаписей = РегистрыСведений.Roistat_ИдентификаторыОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(БизнесПроцесс.Партнер);
		
		Запись = НаборЗаписей.Добавить();
		Запись.Объект = БизнесПроцесс.Партнер;
		Запись.Идентификатор = СокрЛП(roistat_visit);
		
		НаборЗаписей.Записать(Истина);	
		
	КонецЕсли; 	
	
	РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала, ТекущаяДатаСеанса(), 200, "Успешно", БизнесПроцесс.Ссылка); 
		
	ЗафиксироватьТранзакцию();
		
Исключение
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
	ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	
	РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала, ТекущаяДатаСеанса(), 500, ОписаниеОшибки);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(ОписаниеОшибки);
	Перейти ~КонецОбработки;
	
КонецПопытки; 

Ответ = Новый HTTPСервисОтвет(200);
Ответ.УстановитьТелоИзСтроки("ok"); 

~КонецОбработки:
