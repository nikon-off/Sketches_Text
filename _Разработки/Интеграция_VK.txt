	УчетнаяЗапись = ПараметрыВнешнегоИнтерфейса.УчетнаяЗапись;
	ТелоКакСтрока = Запрос.ПолучитьТелоКакСтроку(); 
	
	ТекДата = ТекущаяДатаСеанса();
	ЧтениеJSON	= Новый ЧтениеJSON;	
	ЧтениеJSON.УстановитьСтроку(ТелоКакСтрока); 		
	СтруктураСообщения = ПрочитатьJSON(ЧтениеJSON);		
	ЧтениеJSON.Закрыть(); 
	Ответ = Новый HTTPСервисОтвет(200);
	
	//проверяем сообщение на уже отправленное ранее
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	CRM_СообщениеМессенджера.ID_Пользователя КАК ID_Пользователя,
	|	CRM_СообщениеМессенджера.ТекстСообщения КАК ТекстСообщения
	|ИЗ
	|	Документ.CRM_СообщениеМессенджера КАК CRM_СообщениеМессенджера
	|ГДЕ
	|	CRM_СообщениеМессенджера.Дата > &Дата
	|	И CRM_СообщениеМессенджера.ID_Пользователя ПОДОБНО &ID_Пользователя
	|	И CRM_СообщениеМессенджера.ТекстСообщения ПОДОБНО &ТекстСообщения";

	ПервичноеСообщение = СтруктураСообщения.Свойство("object");
	Если Не ПервичноеСообщение Тогда
		Запрос.УстановитьПараметр("ID_Пользователя", "4dev");
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("ТекстСообщения", "confirmation");
	Иначе
		Запрос.УстановитьПараметр("ID_Пользователя", Формат(СтруктураСообщения.object.user_id,"ЧГ=0"));
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("ТекстСообщения", СтруктураСообщения.object.body);
	КонецЕсли;
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НаименованиеЗапроса = СтрШаблон("Вконтакте.%1",СтруктураСообщения.type);
	ЗаписьЖурнала = РегистрыСведений.ЖурналОбменаAPI.ДобавитьЗапросВЖурнал(НаименованиеЗапроса, ТекущаяДатаСеанса(), ТелоКакСтрока);
	
	Если Не ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Попытка
			Если СтруктураСообщения.type = "confirmation" Тогда
				Ответ.УстановитьТелоИзСтроки(ПараметрыВнешнегоИнтерфейса.КодБезопасности);
				Ответ.КодСостояния = 200;
				РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала,ТекущаяДатаСеанса(),200,"Бот успешно зарегистрирован");
			ИначеЕсли СтруктураСообщения.type = "message_new" Тогда
				ТекстСообщения = "";
				СтруктураСообщения.object.Свойство("body", ТекстСообщения);
				
				МассивСообщений = Новый Массив;
				НовСообщение = Новый Структура;
				НовСообщение.Вставить("Группа", "");
				НовСообщение.Вставить("ID_Пользователя", СтруктураСообщения.object.user_id);
				НовСообщение.Вставить("ID_Сообщения", СтруктураСообщения.object.id);
				Если ЗначениеЗаполнено(ТекстСообщения) Тогда
					НовСообщение.Вставить("ТекстСообщения", ТекстСообщения);
				Иначе
					НовСообщение.Вставить("ТекстСообщения", "Получен файл");
				КонецЕсли;
				НовСообщение.Вставить("ВидСообщения", "Входящее");
				НовСообщение.Вставить("Дата", ТекДата);
				token =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "VK_token");
				Ресурс = "/method/users.get?user_ids=" + СтрЗаменить(СтруктураСообщения.object.user_id, Символы.НПП, "") + "&access_token=" + token + "&v=5.81";
				СтруктураОтвета = РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
				НовСообщение.Вставить("КонтактПредставление", СтруктураОтвета.response[0].last_name + " " + СтруктураОтвета.response[0].first_name);
				МассВложения = Новый Массив;
				Если СтруктураСообщения.object.Свойство("attachments") Тогда
					Для каждого ТекВложение Из СтруктураСообщения.object.attachments Цикл
						ВремПуть = ПолучитьИмяВременногоФайла();
						Попытка
							// 
							Данные = ТекВложение[ТекВложение.type];    
							Если Данные.Свойство("url") Тогда
								СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ТекВложение[ТекВложение.type].url);
							Иначе
								url = ""; 
								ТекРазмер = 0;
								Для каждого ТекСтрока Из Данные Цикл
									Если ТипЗнч(ТекСтрока.Значение) = Тип("Строка") И СтрНайти(ТекСтрока.Значение, "http") Тогда 
										НовРазмер = Число(Сред(ТекСтрока.Ключ, Стрнайти(ТекСтрока.Ключ, "_") + 1));
										Если НовРазмер > ТекРазмер Тогда
											ТекРазмер = НовРазмер;
											url = ТекСтрока.Значение;
										КонецЕсли;
									КонецЕсли;
								КонецЦикла;  
								СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(url);
							КонецЕсли;
							
							Сервер = СтруктураURI.Хост;
							ПутьНаСервере = СтруктураURI.ПутьНаСервере;	
							ssl = Новый ЗащищенноеСоединениеOpenSSL();
							
							HTTPСоединение =  Новый HTTPСоединение(Сервер,,,,,, ssl);
							
							HTTPЗапрос	= Новый HTTPЗапрос(ПутьНаСервере, Новый Соответствие);
							Ответ = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);	
							
							КодСостояния = Ответ.КодСостояния;  
							
							Если КодСостояния = 200 Тогда       
								
								ДвДанные = Ответ.ПолучитьТелоКакДвоичныеДанные();
								ПараметрыФайла = Новый Структура;
								ПараметрыФайла.Вставить("ВладелецФайлов", "");
								ПараметрыФайла.Вставить("Автор", Справочники.Пользователи.Система);  
								Если ТекВложение[ТекВложение.type].Свойство("title") Тогда
									ИмяФайла = СтрРазделить(ТекВложение[ТекВложение.type].title, ".");
									//Иначе
									//	ЛевЧасть = Лев(url, СтрНайти(url, "?size") - 1);
									//	Расширение = Сред(ЛевЧасть, СтрНайти(ЛевЧасть, ".", НаправлениеПоиска.СКонца) + 1);
									//	ИмяФайла = СтрРазделить("image" + ТекНомер + "." + Расширение, ".");   
									//	ТекНомер = ТекНомер + 1;
								КонецЕсли;
								
								ПараметрыФайла.Вставить("ИмяБезРасширения", ИмяФайла[0]);
								ПараметрыФайла.Вставить("РасширениеБезТочки", ИмяФайла[1]);
								ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", ТекДата);
								ПараметрыФайла.Вставить("АдресФайлаВХранилище", ПоместитьВоВременноеХранилище(ДвДанные));
								МассВложения.Добавить(ПараметрыФайла);	
							Иначе
								
								РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала, ТекущаяДатаСеанса(), КодСостояния, Ответ.ПолучитьТелоКакСтроку());
								
							КонецЕсли; 
						Исключение
							РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала, ТекущаяДатаСеанса(), , ОписаниеОшибки());	
						КонецПопытки;
					КонецЦикла;
				КонецЕсли;
				
				НовСообщение.Вставить("Вложения", МассВложения);
				МассивСообщений.Добавить(НовСообщение);
				РаботаСМессенджерамиСервер.СоздатьСообщенияИзПолученныхДанных(УчетнаяЗапись, МассивСообщений);
				
				Ответ.УстановитьТелоИзСтроки("ok");
				Ответ.КодСостояния = 200;
				
				РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала,ТекущаяДатаСеанса(),200,"Сообщение получено");
				
			ИначеЕсли СтруктураСообщения.type = "message_reply" Тогда
				
				ТекстСообщения = "";
				СтруктураСообщения.object.Свойство("body", ТекстСообщения);
				
				НовСообщение = Новый Структура;
				НовСообщение.Вставить("Группа", "");
				НовСообщение.Вставить("ID_Пользователя", Формат(СтруктураСообщения.object.user_id,"ЧГ=0"));
				НовСообщение.Вставить("ID_Сообщения", Формат(СтруктураСообщения.object.id,"ЧГ=0"));
				Если ЗначениеЗаполнено(ТекстСообщения) Тогда
					НовСообщение.Вставить("ТекстСообщения", ТекстСообщения);
				Иначе
					НовСообщение.Вставить("ТекстСообщения", "Получен файл");
				КонецЕсли;
				НовСообщение.Вставить("ВидСообщения", Перечисления.CRM_ВидыСообщенияМессенджера.Исходящее);
				НовСообщение.Вставить("Дата", ТекДата);
				token =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "VK_token");
				Ресурс = "/method/users.get?user_ids=" + СтрЗаменить(СтруктураСообщения.object.user_id, Символы.НПП, "") + "&access_token=" + token + "&v=5.81";
				СтруктураОтвета = РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
				НовСообщение.Вставить("КонтактПредставление", СтруктураОтвета.response[0].last_name + " " + СтруктураОтвета.response[0].first_name);
				Автор = Справочники.Пользователи.API;
				НовСообщение.Вставить("Автор", Автор);
				НовСообщение.Вставить("УчетнаяЗапись", УчетнаяЗапись);
				МассВложения = Новый Массив;
				НовСообщение.Вставить("Вложения", МассВложения);
				НовоеСообщениеВМессенджер = Документы.CRM_СообщениеМессенджера.СоздатьДокумент();
				ЗаполнитьЗначенияСвойств(НовоеСообщениеВМессенджер,НовСообщение);
				НовоеСообщениеВМессенджер.Записать();
				Ответ.УстановитьТелоИзСтроки("ok");
				Ответ.КодСостояния = 200;
				РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала,ТекущаяДатаСеанса(),200,"Сообщение отправлено");
				
			Иначе 
				ТекстОшибки = СтрШаблон("Для тип события %1 не предусмотрена обработка. Необходима дополнительная доработка",НаименованиеЗапроса);
				РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала,ТекущаяДатаСеанса(),400,ТекстОшибки);
				Ответ.УстановитьТелоИзСтроки("ok");
				Ответ.КодСостояния = 200;
				
			КонецЕсли;
		Исключение
			
			РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала,ТекущаяДатаСеанса(),400,ОписаниеОшибки());
			Ответ.УстановитьТелоИзСтроки("ok");
			Ответ.КодСостояния = 200;
		КонецПопытки;
		
	Иначе
		РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала,ТекущаяДатаСеанса(),200,"Дубль запроса");
		Ответ.УстановитьТелоИзСтроки("ok");
		Ответ.КодСостояния = 200;
		
	КонецЕсли;
