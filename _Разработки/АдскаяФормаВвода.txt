&НаКлиенте
Перем ДекорацияПриИзменении;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Контакт = Неопределено;
	
	НовыйЭлементГрОбщая = Элементы.Вставить("ГрДопКЛ", Тип("ГруппаФормы"), Элементы.ГрДопКЛОбщая);
	НовыйЭлементГрОбщая.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НовыйЭлементГрОбщая.Заголовок = "Дополнительные контактные лица";
	НовыйЭлементГрОбщая.Подсказка = "Дополнительное контактное лицо";
	НовыйЭлементГрОбщая.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НовыйЭлементГрОбщая.ОтображатьЗаголовок = Истина;
	НовыйЭлементГрОбщая.Отображение = ОтображениеОбычнойГруппы.Нет; 
	НовыйЭлементГрОбщая.Видимость = Истина;
		
	Если Параметры.Свойство("Контакт", Контакт) И ЗначениеЗаполнено(Контакт) Тогда
				
		КИКонтакта = ПолучитьКИКонтакта(Контакт);
		
		
		МобильныйТелефон = КИКонтакта.МобильныйТелефон;
		РабочийТелефон = КИКонтакта.РабочийТелефон;
		Email = КИКонтакта.Email;
		
		ТелефонИзСобытия = Неопределено;
		
		Если Параметры.Свойство("ТелефонИзСобытия", ТелефонИзСобытия) Тогда
			
			СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ТелефонИзСобытия);
			ТелефонИзСобытия = сфпПреобразоватьНомерСУчетомПрефиксов(СтруктураНомера);
			
			СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(МобильныйТелефон);
			мМобильныйТелефон = сфпПреобразоватьНомерСУчетомПрефиксов(СтруктураНомера);

			СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(РабочийТелефон);
			мРабочийТелефон = сфпПреобразоватьНомерСУчетомПрефиксов(СтруктураНомера);
			
			Элементы.Телефон.Доступность = ТелефонИзСобытия <> мМобильныйТелефон;
			Элементы.РабочийТелефон.Доступность = ТелефонИзСобытия <> мРабочийТелефон;
			
		КонецЕсли; 		
		
		ФИО = ПолучитьФИОИзКонтакта(Контакт);
		
		Если НЕ Параметры.Свойство("Партнер", Партнер) Тогда			
			Партнер = Справочники.ФизическиеЛица.ПолучитьПартнера(Контакт,,,Истина);			
		КонецЕсли;
	
		#Область ЗаполнениеДополнительныхКЛ
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПартнерыКонтактныеЛица.ФизЛицо КАК Ссылка,
		|	ПартнерыКонтактныеЛица.ФизЛицо.Фамилия + "" "" + ПартнерыКонтактныеЛица.ФизЛицо.Имя + "" "" + ПартнерыКонтактныеЛица.ФизЛицо.Отчество КАК ФИО
		|ИЗ
		|	Справочник.Партнеры.КонтактныеЛица КАК ПартнерыКонтактныеЛица
		|ГДЕ
		|	ПартнерыКонтактныеЛица.Ссылка = &Партнер
		|	И ПартнерыКонтактныеЛица.ФизЛицо <> &Контакт
		|	И НЕ ПартнерыКонтактныеЛица.ФизЛицо.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Контакт", Контакт);
		Запрос.УстановитьПараметр("Партнер", Партнер);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			КоличествоКЛ = КоличествоКЛ + 1;
			фКоличествоКЛ = Формат(КоличествоКЛ, "ЧГ=0");
			ДобавляемыеРеквизиты = Новый Массив;
			
			ИмяРеквизита = СтрШаблон("Контакт%1", фКоличествоКЛ);
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"))); 
			
			ИмяРеквизита = СтрШаблон("ФИО%1", фКоличествоКЛ);
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка"))); 	
			
			ИмяРеквизита = СтрШаблон("МобильныйТелефон%1", фКоличествоКЛ);
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));	
			
			ИмяРеквизита = СтрШаблон("РабочийТелефон%1", фКоличествоКЛ);
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));
			
			ИмяРеквизита = СтрШаблон("Email%1", фКоличествоКЛ);
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));
			
			// Выявляем существующие реквизиты (чтобы исключить повторное добавление).
			ИменаСуществующихРеквизитов = Новый Массив;
			УПДК_ОбщегоНазначения.ЗаполнитьМассивИменРеквизитовФормы(ЭтотОбъект, ИменаСуществующихРеквизитов);
			
			// Добавляем реквизиты формы
			УПДК_ОбщегоНазначения.ИзменитьРеквизитыФормы(ЭтотОбъект, ДобавляемыеРеквизиты, ИменаСуществующихРеквизитов, ДобавленныеРеквизиты.ВыгрузитьЗначения());
			
			// Добавляем команды "Позвонить"
			ИмяКомандыМобильный = СтрШаблон("ПозвонитьКЛМобильный%1", фКоличествоКЛ);
			
			Если ЭтотОбъект.Команды.Найти(ИмяКомандыМобильный) = Неопределено Тогда	
				НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКомандыМобильный);	
				НоваяКоманда.Действие = "Позвонить";
				НоваяКоманда.Отображение = ОтображениеКнопки.Картинка;
				НоваяКоманда.Картинка = БиблиотекаКартинок.Позвонить;
				НоваяКоманда.Подсказка = НСтр("ru = 'Позвонить контактному лицу на мобильный телефон'");	
			КонецЕсли;
			
			ИмяКомандыРабочий = СтрШаблон("ПозвонитьКЛРабочий%1", фКоличествоКЛ);
			
			Если ЭтотОбъект.Команды.Найти(ИмяКомандыРабочий) = Неопределено Тогда	
				НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКомандыРабочий);	
				НоваяКоманда.Действие = "Позвонить";
				НоваяКоманда.Отображение = ОтображениеКнопки.Картинка;
				НоваяКоманда.Картинка = БиблиотекаКартинок.Позвонить;
				НоваяКоманда.Подсказка = НСтр("ru = 'Позвонить контактному лицу на рабочий телефон'");	
			КонецЕсли;
						
			
			// ****** Декорация от свернутой группы *******
			
			НовыйЭлементГрДек = Элементы.Вставить("ГрДекКЛ" + фКоличествоКЛ, Тип("ГруппаФормы"), Элементы.ГрДопКЛ);
			НовыйЭлементГрДек.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлементГрДек.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлементГрДек.ОтображатьЗаголовок = Ложь;
			НовыйЭлементГрДек.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение; 
			
			НовыйЭлементД = Элементы.Вставить("ДекорацияКЛ" + фКоличествоКЛ, Тип("ДекорацияФормы"), НовыйЭлементГрДек);
			НовыйЭлементД.Вид = ВидДекорацииФормы.Надпись;
			НовыйЭлементД.Заголовок = ВыборкаДетальныеЗаписи.ФИО;
			НовыйЭлементД.Подсказка = ВыборкаДетальныеЗаписи.ФИО;
			НовыйЭлементД.Гиперссылка = Истина;
			НовыйЭлементД.УстановитьДействие("Нажатие", "Подключаемый_НажатиеДекорация");  			
			
			// ******   Группа формы "КЛх"    ***********
			
			НовыйЭлементГр = Элементы.Вставить("КЛ" + фКоличествоКЛ, Тип("ГруппаФормы"), Элементы.ГрДопКЛ);
			НовыйЭлементГр.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлементГр.Заголовок = "Дополнительное контактное лицо";
			НовыйЭлементГр.Подсказка = "Дополнительное контактное лицо";
			НовыйЭлементГр.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			НовыйЭлементГр.ОтображатьЗаголовок = Ложь;
			НовыйЭлементГр.Отображение = ОтображениеОбычнойГруппы.Нет; 
			НовыйЭлементГр.Видимость = Ложь;
			
			
			// Добавляем поля ввода
			Для Каждого Реквизит Из ДобавляемыеРеквизиты Цикл
				
				Если ПустаяСтрока(Реквизит.Имя) ИЛИ СтрНачинаетсяС(Реквизит.Имя, "Контакт") ИЛИ СтрНачинаетсяС(Реквизит.Имя, "Пол") Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяПоляВвода = СтрШаблон("%1", Реквизит.Имя);
				Если Элементы.Найти(ИмяПоляВвода) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если СтрНачинаетсяС(Реквизит.Имя, "ФИО") Тогда
					
					НовыйЭлемент = Элементы.Вставить("ГрФИО" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
					НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
					НовыйЭлемент.ОтображатьЗаголовок = Ложь;
					НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
					НовыйЭлемент.Видимость = Истина;  					
										
					ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
					ПолеВвода.ПутьКДанным = Реквизит.Имя;				
					ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
					ПолеВвода.ПодсказкаВвода = "Фамилия Имя Отчество"; 					
					ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_ФИОПриИзменении");				
					
				ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "МобильныйТелефон") Тогда
					
					НовыйЭлемент = Элементы.Вставить("ГрМобильныйТелефон" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
					НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
					НовыйЭлемент.ОтображатьЗаголовок = Ложь;
					НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
					НовыйЭлемент.Видимость = Истина;  					
					
					ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
					ПолеВвода.ПутьКДанным = Реквизит.Имя;				
					ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
					ПолеВвода.ПодсказкаВвода = "Мобильный телефон";
					ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_НомерТелефонаПриИзменении");

					// Добавление кнопки звонка
					Кнопка = Элементы.Добавить(ИмяКомандыМобильный, Тип("КнопкаФормы"), НовыйЭлемент);
					Кнопка.ИмяКоманды = ИмяКомандыМобильный;
					Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
					
				ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "РабочийТелефон") Тогда
					
					НовыйЭлемент = Элементы.Вставить("ГрРабочийТелефон" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
					НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
					НовыйЭлемент.ОтображатьЗаголовок = Ложь;
					НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
					НовыйЭлемент.Видимость = Истина;  					
										
					ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
					ПолеВвода.ПутьКДанным = Реквизит.Имя;				
					ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
					ПолеВвода.ПодсказкаВвода = "Рабочий телефон";
					ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_НомерТелефонаПриИзменении");
					
					// Добавление кнопки звонка
					Кнопка = Элементы.Добавить(ИмяКомандыРабочий, Тип("КнопкаФормы"), НовыйЭлемент);
					Кнопка.ИмяКоманды = ИмяКомандыРабочий;
					Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
					
				ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "Email") Тогда
					
					НовыйЭлемент = Элементы.Вставить("ГрEmail" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
					НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
					НовыйЭлемент.ОтображатьЗаголовок = Ложь;
					НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
					НовыйЭлемент.Видимость = Истина;  					
										
					ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
					ПолеВвода.ПутьКДанным = Реквизит.Имя;				
					ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
					ПолеВвода.ПодсказкаВвода = "E-mail";
					
				ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "Роль") Тогда
					
					НовыйЭлемент = Элементы.Вставить("ГрРоль" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
					НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
					НовыйЭлемент.ОтображатьЗаголовок = Ложь;
					НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
					НовыйЭлемент.Видимость = Истина;  					
										
					ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
					ПолеВвода.ПутьКДанным = Реквизит.Имя;				
					ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
					ПолеВвода.ПодсказкаВвода = "Роль";
										
				КонецЕсли;
				
				ПолеВвода.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет; 		
				
			КонецЦикла;
			
			ЭтотОбъект["Контакт" + фКоличествоКЛ] = ВыборкаДетальныеЗаписи.Ссылка;
			ЭтотОбъект["ФИО" + фКоличествоКЛ] = ВыборкаДетальныеЗаписи.ФИО;
			
			КИКонтакта = ПолучитьКИКонтакта(ВыборкаДетальныеЗаписи.Ссылка);
			
			ЭтотОбъект["МобильныйТелефон" + фКоличествоКЛ] = КИКонтакта.МобильныйТелефон;
			ЭтотОбъект["РабочийТелефон" + фКоличествоКЛ] = КИКонтакта.РабочийТелефон;
			ЭтотОбъект["Email" + фКоличествоКЛ] = КИКонтакта.Email; 		
			
		КонецЦикла;
		
		#КонецОбласти
			
	КонецЕсли;	
	
	Если Параметры.Свойство("ФИО") Тогда
		ФИО = Параметры.ФИО;
	КонецЕсли; 	
			
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивПолейТелефонов = Новый Массив;
	
	Если Элементы.Телефон.Доступность Тогда
		МассивПолейТелефонов.Добавить(Элементы.Телефон);
	КонецЕсли;
	
	Если Элементы.РабочийТелефон.Доступность Тогда  
		МассивПолейТелефонов.Добавить(Элементы.РабочийТелефон);
	КонецЕсли;
	
	Для СчетчикКЛ = 1 по КоличествоКЛ Цикл
		фСчетчикКЛ = Формат(СчетчикКЛ, "ЧГ=0");
		Если ПустаяСтрока(ЭтотОбъект["ФИО" + фСчетчикКЛ]) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПолейТелефонов.Добавить(Элементы["РабочийТелефон" + фСчетчикКЛ]);
		МассивПолейТелефонов.Добавить(Элементы["МобильныйТелефон" + фСчетчикКЛ]);
			
	КонецЦикла;
	
	//Если МассивПолейТелефонов.Количество() > 0 Тогда
	//	Справочники.ШаблоныНомеровТелефонов.ПроверкаЗаполненияПолейВводаТелефонов(ЭтотОбъект, МассивПолейТелефонов, 
	//		Истина, Отказ);
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Подключаемый_ФИОПриИзменении(Элемент) Экспорт
	
	ИмяГруппы = Сред(Элемент.Имя, 4);

	Если НЕ Элементы.ДобавтиьКЛ.Видимость И КоличествоКЛ = Число(ИмяГруппы) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ВернутьВидимостьКнопкеСоздатьКЛ", 0.1, Истина);
	КонецЕсли;	
	
	//Это фиаско	
	ДекорацияПриИзменении = Элемент; 	
	ПодключитьОбработчикОжидания("Подключаемый_ФИОПриИзмененииПродолжение", 0.1, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НомерТелефонаПриИзменении(Элемент) Экспорт
	
	//Преобразуем номер телефона по маске
	УправлениеКонтактнойИнформациейКлиент.НомерТелефонаПриИзменении(ЭтотОбъект, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеДекорация(Элемент) Экспорт
	
	ИмяГруппы = Сред(Элемент.Имя, 12);
	
	Элементы["КЛ"+ ИмяГруппы].Видимость = Не Элементы["КЛ"+ ИмяГруппы].Видимость;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект["Контакт"+ИмяГруппы]) Тогда
		
		Элементы["КнопкаУдалить" + ИмяГруппы].Видимость = НЕ Элементы["КнопкаУдалить" + ИмяГруппы].Видимость;
		
	КонецЕсли;

		
	Если Не ПустаяСтрока(ИмяАктивнойГруппы) И ИмяАктивнойГруппы <> ИмяГруппы Тогда		
		
		Элементы["КЛ" + ИмяАктивнойГруппы].Видимость = Ложь; 
				
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект["Контакт"+ИмяАктивнойГруппы]) Тогда
			
			Элементы["КнопкаУдалить" + ИмяАктивнойГруппы].Видимость = Ложь; 
		
		КонецЕсли;
		
	КонецЕсли;	
	
	ИмяАктивнойГруппы = ИмяГруппы; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	
	//Преобразуем номер телефона по маске
	//УправлениеКонтактнойИнформациейКлиент.НомерТелефонаПриИзменении(ЭтотОбъект, Элемент, "МобильныйТелефон");
	
КонецПроцедуры

&НаКлиенте
Процедура РабочийТелефонПриИзменении(Элемент)
	
	//Преобразуем номер телефона по маске
	УправлениеКонтактнойИнформациейКлиент.НомерТелефонаПриИзменении(ЭтотОбъект, Элемент, "РабочийТелефон");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	Ссылки = Неопределено;	
	
	Отказ = Ложь;
	СписокВыбора = Неопределено;
	ОкНаСервере(Ссылки, Отказ, СписокВыбора);
	
	Если Отказ Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросАналогичныйКлиентЗавершение", ЭтотОбъект, Новый Структура("СписокВыбора", СписокВыбора));
		ПоказатьВопрос(ОписаниеОповещения, Нстр("ru = 'Уже существует клиент с указанным номером мобильного телефона, Выбрать другого?'"), РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		
		ОповеститьОбИзменении(Ссылки.Партнер);
		ОповеститьОбИзменении(Ссылки.Контакт);	
		
		Закрыть(Новый Структура("Ссылки", Ссылки));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросАналогичныйКлиентЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьИзСпискаЗавершение", ЭтотОбъект);

		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.ЗагрузитьЗначения(ДополнительныеПараметры.СписокВыбора);
		ПоказатьВыборИзМеню(ОписаниеОповещения, СписокВыбора);
		
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКЛ(Команда)
	ДобавитьЕщеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКЛ(Команда)
	
	ИмяГруппы = ИмяАктивнойГруппы;
	
	Элементы["КЛ"+ ИмяГруппы].Видимость = Ложь;
	
	Элементы["ГрДекКЛ"+ ИмяГруппы].Видимость = Ложь;
	
	ЭтотОбъект["ФИО"+ ИмяГруппы] = "";

	ИмяАктивнойГруппы = ""; 

КонецПроцедуры

&НаКлиенте
Процедура Позвонить(Команда)
	                     
	Если Команда.Имя = "ПозвонитьКонтактуМобильный" Тогда
		Телефон = МобильныйТелефон;
		Абонент = ?(Контакт.Пустая(), ФИО, Контакт);	
	ИначеЕсли Команда.Имя = "ПозвонитьКонтактуРабочий" Тогда
	   	Телефон = РабочийТелефон;
		Абонент = ?(Контакт.Пустая(), ФИО, Контакт);
	ИначеЕсли СтрНачинаетсяС(Команда.Имя, "ПозвонитьКЛМобильный") Тогда
		
		НомерКЛ = СтрЗаменить(Команда.Имя, "ПозвонитьКЛМобильный", "");
		
		ИмяРеквизитаТелефон = СтрШаблон("МобильныйТелефон%1", НомерКЛ);				
		Телефон = ЭтотОбъект[ИмяРеквизитаТелефон];
		
		ИмяРеквилитаКонтакт = СтрШаблон("Контакт%1", НомерКЛ);
		КЛ = ЭтотОбъект[ИмяРеквилитаКонтакт];
		
		ИмяРеквилитаФИО = СтрШаблон("ФИО%1", НомерКЛ);
		ФИОКЛ = ЭтотОбъект[ИмяРеквилитаФИО];
 		
		Абонент = ?(КЛ.Пустая(), ФИОКЛ, КЛ);
	ИначеЕсли СтрНачинаетсяС(Команда.Имя, "ПозвонитьКЛРабочий") Тогда
		
		НомерКЛ = СтрЗаменить(Команда.Имя, "ПозвонитьКЛРабочий", "");
		
		ИмяРеквизитаТелефон = СтрШаблон("РабочийТелефон%1", НомерКЛ);				
		Телефон = ЭтотОбъект[ИмяРеквизитаТелефон];
		
		ИмяРеквилитаКонтакт = СтрШаблон("Контакт%1", НомерКЛ);
		КЛ = ЭтотОбъект[ИмяРеквилитаКонтакт];
		
		Абонент = ?(КЛ.Пустая(), ФИОКЛ, КЛ);

	Иначе 
		Телефон = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Телефон) Тогда 
		//+Никонов по задаче Энко-56
		//сфпСофтФонПроКлиент.сфпПозвонить(Телефон, Абонент);
		сфпСофтФонПроКлиент.ПоказатьСписокАТСПриЗвонке(Телефон, Абонент, ЭтаФорма, Элементы.ПозвонитьКонтактуМобильный);
		//-Никонов
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция сфпПреобразоватьНомерСУчетомПрефиксов(СтруктураНомера)
	сфпПараметрыСервера	= ИнтеграцияAsteriskПовтИсп.сфпПараметрыСервера();
	Если ПустаяСтрока(СтруктураНомера.НомерТелефона) Тогда
		Если ПустаяСтрока(СтруктураНомера.Добавочный) Тогда
			// Номера нет.
			РезультатНомер = "";
		Иначе
			// Внутренний номер.
			РезультатНомер = СтруктураНомера.Добавочный;
		КонецЕсли;			
	// проверяем длину номеру вместе с длиной кода города, т.к. в ряде компаний внутренний 
	// номер может быть достаточно длинным, до 9 символов
	// у внутренних же номеров код города отсутствует
	ИначеЕсли СтрДлина(СтруктураНомера.НомерТелефона)+СтрДлина(СтруктураНомера.КодГорода) > сфпПараметрыСервера.МаксимальнаяДлинаВнутреннихНомеров Тогда
		РезультатНомер = СтруктураНомера.КодСтраны + СтруктураНомера.КодГорода + СтруктураНомера.НомерТелефона;
	Иначе
		// Внутренний номер.
		РезультатНомер = СтруктураНомера.НомерТелефона;
	КонецЕсли;
	Возврат РезультатНомер;
КонецФункции // ПреобразоватьНомерСУчетомПрефиксов()

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(ЭтотОбъект) 

КонецПроцедуры

&НаСервере
Процедура ОкНаСервере(Ссылки, Отказ, СписокВыбора)

	//Проверяем на существование клиента с аналогичным телефоном
	
	Если НЕ ПустаяСтрока(Прав(МобильныйТелефон, 10)) Тогда  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	сфпНомераТелефоновДляПоиска.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.сфпНомераТелефоновДляПоиска КАК сфпНомераТелефоновДляПоиска
		|ГДЕ
		|	сфпНомераТелефоновДляПоиска.НомерТелефона = &НомерТелефона
		|	И НЕ сфпНомераТелефоновДляПоиска.Объект В (&МассивОбъектов)
		|	И сфпНомераТелефоновДляПоиска.УПДК_Порядок = 2";
		
		Запрос.УстановитьПараметр("НомерТелефона", Прав(сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксыВыходаНаЛинию(МобильныйТелефон), 10));
		
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Контакт);
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			СписокВыбора = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Объект");
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Если ЗначениеЗаполнено(Контакт) Тогда 		
		
		СпрОбъект = Контакт.ПолучитьОбъект();
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ФИО, " ");
		
		КоличествоСлов = МассивПодстрок.Количество();
		
		СпрОбъект.Фамилия = "";
		СпрОбъект.Имя = "";
		СпрОбъект.Отчество = "";
		
		Если КоличествоСлов > 0 Тогда		
			СпрОбъект.Фамилия = МассивПодстрок[0]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 1 Тогда		
			СпрОбъект.Имя = МассивПодстрок[1]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 2 Тогда
			
			Для Счетчик = 2 по КоличествоСлов-1 Цикл
				СпрОбъект.Отчество = СпрОбъект.Отчество + " " + МассивПодстрок[Счетчик];
			КонецЦикла;
			
			СпрОбъект.Отчество = СокрЛП(СпрОбъект.Отчество);
			
		КонецЕсли;
		
		//КИ
		//МобильныйТелефон
		НайденыеСтроки = СпрОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовМобильныйТелефон = НайденыеСтроки[0];
		Иначе
			НовМобильныйТелефон = СпрОбъект.КонтактнаяИнформация.Добавить();
		КонецЕсли;		
		НовМобильныйТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовМобильныйТелефон.Вид = Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица;
		НовМобильныйТелефон.Представление = ЭтотОбъект.МобильныйТелефон;
		НовМобильныйТелефон.НомерТелефона = ЭтотОбъект.МобильныйТелефон;
		//РабочийТелефон
		НайденыеСтроки = СпрОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовРабочийТелефон = НайденыеСтроки[0];
		Иначе
			НовРабочийТелефон = СпрОбъект.КонтактнаяИнформация.Добавить();
		КонецЕсли;
		НовРабочийТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовРабочийТелефон.Вид = Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица;
		НовРабочийТелефон.Представление = ЭтотОбъект.РабочийТелефон;
		НовРабочийТелефон.НомерТелефона = ЭтотОбъект.РабочийТелефон;
		//email
		НайденыеСтроки = СпрОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовEmail = НайденыеСтроки[0];
		Иначе
			НовEmail = СпрОбъект.КонтактнаяИнформация.Добавить();
		КонецЕсли;
		НовEmail.Вид = Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица;
		НовEmail.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НовEmail.Представление = ЭтотОбъект.Email;  
		
		
		СпрОбъект.Записать(); 
	
		Если РегистрыСведений.СтатусыКлиентов.ПолучитьСтатусКлиента(Партнер) = Перечисления.СтатусыКлиента.НеобработанныйКонтакт Тогда 			
			РегистрыСведений.СтатусыКлиентов.УстановитьСтатусКлиента(Партнер, Перечисления.СтатусыКлиента.Контакт);
		КонецЕсли;
		
		ПартнерОбъект = Партнер.ПолучитьОбъект();
		
	Иначе //Создаем нового Партнера и КЛ		
		
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ФИО, " ");
		
		КоличествоСлов = МассивПодстрок.Количество();
		
		Фамилия = "";
		Имя = "";
		Отчество = "";
		
		Если КоличествоСлов > 0 Тогда		
			Фамилия = МассивПодстрок[0]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 1 Тогда		
			Имя = МассивПодстрок[1]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 2 Тогда
			
			Отчество = "";
			
			Для Счетчик = 2 по КоличествоСлов-1 Цикл
				Отчество = Отчество + " " + МассивПодстрок[Счетчик];
			КонецЦикла;
			
			Отчество = СокрЛП(Отчество);
			
		КонецЕсли;
		
		СпрОбъект = Справочники.ФизическиеЛица.СоздатьЭлемент();
		
		СпрОбъект.Имя = Имя;
		СпрОбъект.Фамилия = Фамилия;
		СпрОбъект.Отчество = Отчество;
		
		//КИ
		//МобильныйТелефон
		НайденыеСтроки = СпрОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовМобильныйТелефон = НайденыеСтроки[0];
		Иначе
			НовМобильныйТелефон = СпрОбъект.КонтактнаяИнформация.Добавить();
		КонецЕсли;		
		НовМобильныйТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовМобильныйТелефон.Вид = Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица;
		НовМобильныйТелефон.Представление = ЭтотОбъект.МобильныйТелефон;
		НовМобильныйТелефон.НомерТелефона = ЭтотОбъект.МобильныйТелефон;
		//РабочийТелефон
		НайденыеСтроки = СпрОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовРабочийТелефон = НайденыеСтроки[0];
		Иначе
			НовРабочийТелефон = СпрОбъект.КонтактнаяИнформация.Добавить();
		КонецЕсли;
		НовРабочийТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовРабочийТелефон.Вид = Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица;
		НовРабочийТелефон.Представление = ЭтотОбъект.РабочийТелефон;
		НовРабочийТелефон.НомерТелефона = ЭтотОбъект.РабочийТелефон;
		//email
		НайденыеСтроки = СпрОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовEmail = НайденыеСтроки[0];
		Иначе
			НовEmail = СпрОбъект.КонтактнаяИнформация.Добавить();
		КонецЕсли;
		НовEmail.Вид = Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица;
		НовEmail.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НовEmail.Представление = ЭтотОбъект.Email; 		
		
		СпрОбъект.Записать();

		
		
		ПартнерОбъект = Справочники.Партнеры.СоздатьЭлемент();			
		ПартнерОбъект.ОсновнойМенеджер = ПользователиКлиентСервер.ТекущийПользователь(); 					
		ПартнерОбъект.CRM_ФизЛицо = Истина;
		ПартнерОбъект.ВидПартнера = Перечисления.ВидПартнера.ЧастноеЛицо;
		
		ПартнерОбъект.ОсновноеКонтактноеЛицо = СпрОбъект.Ссылка;
		НовКЛ = ПартнерОбъект.КонтактныеЛица.Добавить();
		НовКл.ФизЛицо = СпрОбъект.Ссылка;
		НовКл.ПравоПодписи = Истина;
		
		ПартнерОбъект.Записать();
		
		Партнер = ПартнерОбъект.Ссылка;
		
		РегистрыСведений.СтатусыКлиентов.УстановитьСтатусКлиента(Партнер, Перечисления.СтатусыКлиента.Контакт);
		
		
					
	КонецЕсли; 	
	
	Ссылки = Новый Структура;
	Ссылки.Вставить("Контакт", СпрОбъект.Ссылка);
	Ссылки.Вставить("Партнер", Партнер);
	
	//вставить запись КИ
	
	Для СчетчикКЛ = 1 по КоличествоКЛ Цикл
		фКоличествоКЛ = Формат(КоличествоКЛ, "ЧГ=0");
		Если ПустаяСтрока(ЭтотОбъект["ФИО" + фКоличествоКЛ]) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭтотОбъект["Контакт" + фКоличествоКЛ]) Тогда
			НовКонтакт = ЭтотОбъект["Контакт" + фКоличествоКЛ].ПолучитьОбъект();
		Иначе
			НовКонтакт = Справочники.ФизическиеЛица.СоздатьЭлемент();
		КонецЕсли;		
		
		НовКонтакт.Наименование = ЭтотОбъект["ФИО" + фКоличествоКЛ];
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(НовКонтакт.Наименование, " ");
		
		КоличествоСлов = МассивПодстрок.Количество();
		
		Если КоличествоСлов > 0 Тогда		
			НовКонтакт.Фамилия = МассивПодстрок[0]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 1 Тогда		
			НовКонтакт.Имя = МассивПодстрок[1]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 2 Тогда
			
			НовКонтакт.Отчество = "";
			
			Для Счетчик = 2 по КоличествоСлов-1 Цикл
				НовКонтакт.Отчество = НовКонтакт.Отчество + " " + МассивПодстрок[Счетчик];
			КонецЦикла;
			
			НовКонтакт.Отчество = СокрЛП(НовКонтакт.Отчество);
			
		КонецЕсли;
			
		//МобильныйТелефон
		НайденыеСтроки = НовКонтакт.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовМобильныйТелефон = НайденыеСтроки[0];
		Иначе
			НовМобильныйТелефон = НовКонтакт.КонтактнаяИнформация.Добавить();
		КонецЕсли;		
		НовМобильныйТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовМобильныйТелефон.Вид = Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица;
		НовМобильныйТелефон.Представление = ЭтотОбъект["МобильныйТелефон" + фКоличествоКЛ];
		НовМобильныйТелефон.НомерТелефона = ЭтотОбъект["МобильныйТелефон" + фКоличествоКЛ];
		//РабочийТелефон
		НайденыеСтроки = НовКонтакт.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовРабочийТелефон = НайденыеСтроки[0];
		Иначе
			НовРабочийТелефон = НовКонтакт.КонтактнаяИнформация.Добавить();
		КонецЕсли;
		НовРабочийТелефон.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НовРабочийТелефон.Вид = Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица;
		НовРабочийТелефон.Представление = ЭтотОбъект["РабочийТелефон" + фКоличествоКЛ];
		НовРабочийТелефон.НомерТелефона = ЭтотОбъект["РабочийТелефон" + фКоличествоКЛ];
		//email
		НайденыеСтроки = НовКонтакт.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица));
		Если НайденыеСтроки.Количество() Тогда
			НовEmail = НайденыеСтроки[0];
		Иначе
			НовEmail = НовКонтакт.КонтактнаяИнформация.Добавить();
		КонецЕсли;
		НовEmail.Вид = Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица;
		НовEmail.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НовEmail.Представление = ЭтотОбъект["Email" + фКоличествоКЛ];
		
		НовКонтакт.Записать();
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект["Контакт" + фКоличествоКЛ]) Тогда
			
			НовКЛ = ПартнерОбъект.КонтактныеЛица.Добавить(); 			
			НовКЛ.ФизЛицо = НовКонтакт.Ссылка;
			НовКЛ.ПравоПодписи = Истина;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	ПартнерОбъект.Записать();
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЕщеНаСервере()
	
	КоличествоКЛ = КоличествоКЛ + 1;
	фКоличествоКЛ = Формат(КоличествоКЛ, "ЧГ=0");


	ДобавляемыеРеквизиты = Новый Массив;
	
	ИмяРеквизита = СтрШаблон("Контакт%1", фКоличествоКЛ);
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"))); 	

	ИмяРеквизита = СтрШаблон("ФИО%1", фКоличествоКЛ);
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка"))); 	
			
	ИмяРеквизита = СтрШаблон("МобильныйТелефон%1", фКоличествоКЛ);
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));	
	
	ИмяРеквизита = СтрШаблон("РабочийТелефон%1", фКоличествоКЛ);
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));

	ИмяРеквизита = СтрШаблон("Email%1", фКоличествоКЛ);
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка")));
	
	// Выявляем существующие реквизиты (чтобы исключить повторное добавление).
	ИменаСуществующихРеквизитов = Новый Массив;
	УПДК_ОбщегоНазначения.ЗаполнитьМассивИменРеквизитовФормы(ЭтотОбъект, ИменаСуществующихРеквизитов);
	
	// Добавляем реквизиты формы
	УПДК_ОбщегоНазначения.ИзменитьРеквизитыФормы(ЭтотОбъект, ДобавляемыеРеквизиты, ИменаСуществующихРеквизитов, ДобавленныеРеквизиты.ВыгрузитьЗначения());	
	
	// Добавляем команды "Позвонить"
	ИмяКомандыМобильный = СтрШаблон("ПозвонитьКЛМобильный%1", фКоличествоКЛ);
	
	Если ЭтотОбъект.Команды.Найти(ИмяКомандыМобильный) = Неопределено Тогда	
		НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКомандыМобильный);	
		НоваяКоманда.Действие = "Позвонить";
		НоваяКоманда.Отображение = ОтображениеКнопки.Картинка;
		НоваяКоманда.Картинка = БиблиотекаКартинок.Позвонить;
		НоваяКоманда.Подсказка = НСтр("ru = 'Позвонить контактному лицу на мобильный телефон'");	
	КонецЕсли;
	
	ИмяКомандыРабочий = СтрШаблон("ПозвонитьКЛРабочий%1", фКоличествоКЛ);
	
	Если ЭтотОбъект.Команды.Найти(ИмяКомандыРабочий) = Неопределено Тогда	
		НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКомандыРабочий);	
		НоваяКоманда.Действие = "Позвонить";
		НоваяКоманда.Отображение = ОтображениеКнопки.Картинка;
		НоваяКоманда.Картинка = БиблиотекаКартинок.Позвонить;
		НоваяКоманда.Подсказка = НСтр("ru = 'Позвонить контактному лицу на рабочий телефон'");	
	КонецЕсли;
	
	//Изменяем активную группу
	ИмяГруппы = фКоличествоКЛ;
	
	Если Не ПустаяСтрока(ИмяАктивнойГруппы) И ИмяАктивнойГруппы <> ИмяГруппы Тогда		
		Элементы["КЛ" + ИмяАктивнойГруппы].Видимость = Ложь; 		
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект["Контакт"+ИмяАктивнойГруппы]) И Элементы.Найти("КнопкаУдалить" + ИмяАктивнойГруппы) <> Неопределено Тогда		
		Элементы["КнопкаУдалить" + ИмяАктивнойГруппы].Видимость = НЕ Элементы["КнопкаУдалить" + ИмяАктивнойГруппы].Видимость; 		
	КонецЕсли;  
	
	ИмяАктивнойГруппы = ИмяГруппы;	
	
	// ****** Декорация от свернутой группы *******
	
	НовыйЭлементГрДек = Элементы.Вставить("ГрДекКЛ" + фКоличествоКЛ, Тип("ГруппаФормы"), Элементы.ГрДопКЛ);
	НовыйЭлементГрДек.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НовыйЭлементГрДек.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	НовыйЭлементГрДек.ОтображатьЗаголовок = Ложь;
	НовыйЭлементГрДек.Отображение = ОтображениеОбычнойГруппы.Нет; 
	
	НовыйЭлементД = Элементы.Вставить("ДекорацияКЛ" + фКоличествоКЛ, Тип("ДекорацияФормы"), НовыйЭлементГрДек);
	НовыйЭлементД.Вид = ВидДекорацииФормы.Надпись;
	НовыйЭлементД.Заголовок = "Новый контакт";
	НовыйЭлементД.Гиперссылка = Истина;
	НовыйЭлементД.УстановитьДействие("Нажатие", "Подключаемый_НажатиеДекорация");  
	
	КнопкаФормы = Элементы.Добавить("КнопкаУдалить" + фКоличествоКЛ, Тип("КнопкаФормы"), НовыйЭлементГрДек);
	КнопкаФормы.ИмяКоманды = "УдалитьКЛ";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаФормы.Картинка = БиблиотекаКартинок.Остановить;
	КнопкаФормы.ОтображениеФигуры = ОтображениеФигурыКнопки.Нет;
	КнопкаФормы.Отображение = ОтображениеКнопки.Картинка;  		
			
	// ******   Группа формы "КЛх"    ***********
	
	НовыйЭлементГр = Элементы.Вставить("КЛ" + фКоличествоКЛ, Тип("ГруппаФормы"), Элементы.ГрДопКЛ);
	НовыйЭлементГр.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НовыйЭлементГр.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НовыйЭлементГр.ОтображатьЗаголовок = Ложь;
	НовыйЭлементГр.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение; 
		
	// Добавляем поля ввода
	Для Каждого Реквизит Из ДобавляемыеРеквизиты Цикл
		
		Если ПустаяСтрока(Реквизит.Имя) ИЛИ СтрНачинаетсяС(Реквизит.Имя, "Контакт") Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяПоляВвода = СтрШаблон("%1", Реквизит.Имя);
		Если Элементы.Найти(ИмяПоляВвода) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрНачинаетсяС(Реквизит.Имя, "ФИО") Тогда
			
			НовыйЭлемент = Элементы.Вставить("ГрФИО" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
			НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлемент.ОтображатьЗаголовок = Ложь;
			НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
			НовыйЭлемент.Видимость = Истина;  					
			
			ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
			ПолеВвода.ПутьКДанным = Реквизит.Имя;				
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПодсказкаВвода = "Фамилия Имя Отчество";
			ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_ФИОПриИзменении");
					
		ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "МобильныйТелефон") Тогда
			
			НовыйЭлемент = Элементы.Вставить("ГрМобильныйТелефон" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
			НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлемент.ОтображатьЗаголовок = Ложь;
			НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
			НовыйЭлемент.Видимость = Истина;  					
			
			ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
			ПолеВвода.ПутьКДанным = Реквизит.Имя;				
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПодсказкаВвода = "Мобильный телефон";
			ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_НомерТелефонаПриИзменении");

			// Добавление кнопки звонка
			Кнопка = Элементы.Добавить(ИмяКомандыМобильный, Тип("КнопкаФормы"), НовыйЭлемент);
			Кнопка.ИмяКоманды = ИмяКомандыМобильный;
			Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			
		ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "РабочийТелефон") Тогда
			
			НовыйЭлемент = Элементы.Вставить("ГрРабочийТелефон" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
			НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлемент.ОтображатьЗаголовок = Ложь;
			НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
			НовыйЭлемент.Видимость = Истина;  					
						
			ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
			ПолеВвода.ПутьКДанным = Реквизит.Имя;				
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПодсказкаВвода = "Рабочий телефон";
			ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_НомерТелефонаПриИзменении");
			
			// Добавление кнопки звонка
			Кнопка = Элементы.Добавить(ИмяКомандыРабочий, Тип("КнопкаФормы"), НовыйЭлемент);
			Кнопка.ИмяКоманды = ИмяКомандыРабочий;
			Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			
		ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "Email") Тогда
			
			НовыйЭлемент = Элементы.Вставить("ГрEmail" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
			НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлемент.ОтображатьЗаголовок = Ложь;
			НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
			НовыйЭлемент.Видимость = Истина;  					
			
			ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
			ПолеВвода.ПутьКДанным = Реквизит.Имя;				
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПодсказкаВвода = "E-mail";
			
				
		ИначеЕсли  СтрНачинаетсяС(Реквизит.Имя, "Роль") Тогда
			
			НовыйЭлемент = Элементы.Вставить("ГрРоль" + фКоличествоКЛ, Тип("ГруппаФормы"), НовыйЭлементГр);
			НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлемент.ОтображатьЗаголовок = Ложь;
			НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет; 
			НовыйЭлемент.Видимость = Истина;  					
						
			ПолеВвода = Элементы.Добавить(ИмяПоляВвода, Тип("ПолеФормы"), НовыйЭлемент);
			ПолеВвода.ПутьКДанным = Реквизит.Имя;				
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПодсказкаВвода = "Роль";
			
		КонецЕсли;
		
		ПолеВвода.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет; 	 		
		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКИКонтакта(Контакт)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление КАК МобильныйТелефон
		|ПОМЕСТИТЬ ВТМобильныйТелефон
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|ГДЕ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = &ВидМобильныйТелефон
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление КАК РабочийТелефон
		|ПОМЕСТИТЬ ВТРабочийТелефон
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|ГДЕ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = &ВидРабочийТелефон
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление КАК Email
		|ПОМЕСТИТЬ ВТEmail
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|ГДЕ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = &ВидEmail
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(ВТEmail.Email, """") КАК Email,
		|	ЕСТЬNULL(ВТРабочийТелефон.РабочийТелефон, """") КАК РабочийТелефон,
		|	ЕСТЬNULL(ВТМобильныйТелефон.МобильныйТелефон, """") КАК МобильныйТелефон
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМобильныйТелефон КАК ВТМобильныйТелефон
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочийТелефон КАК ВТРабочийТелефон
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТEmail КАК ВТEmail
		|		ПО (ИСТИНА)";
	
	Запрос.УстановитьПараметр("ВидEmail", Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица);
	Запрос.УстановитьПараметр("ВидРабочийТелефон", Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица);
	Запрос.УстановитьПараметр("ВидМобильныйТелефон", Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица);
	Запрос.УстановитьПараметр("Ссылка", Контакт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Email", ВыборкаДетальныеЗаписи.Email); 
	СтруктураВозврата.Вставить("РабочийТелефон", ВыборкаДетальныеЗаписи.РабочийТелефон);
	СтруктураВозврата.Вставить("МобильныйТелефон", ВыборкаДетальныеЗаписи.МобильныйТелефон);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ФИОПриИзмененииПродолжение() Экспорт
	
	ИмяГруппы = Сред(ДекорацияПриИзменении.Имя, 4);

	Элементы["ДекорацияКЛ"+ ИмяГруппы].Заголовок = ЭтотОбъект[ДекорацияПриИзменении.Имя];
	
КонецПроцедуры  

&НаКлиенте
Процедура Подключаемый_ВернутьВидимостьКнопкеСоздатьКЛ() Экспорт
	
	Элементы.ДобавтиьКЛ.Видимость = Истина;
	
КонецПроцедуры  

&НаКлиенте
Процедура ВыбратьИзСпискаЗавершение(РезультатЗакрытия, ДополнительныеПараметры = Неопределено) Экспорт
		
	Если РезультатЗакрытия = Неопределено Тогда	
		Возврат;		
	КонецЕсли;
	
	Контакт = РезультатЗакрытия.Значение;
	
	Ссылки = Новый Структура;
	Ссылки.Вставить("Контакт", Контакт);
	Ссылки.Вставить("Партнер", УПДК_ФизическиеЛицаВызовСервера.ПолучитьПартнера(Контакт));
	Закрыть(Новый Структура("Ссылки", Ссылки));
		
		
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьФИОИзКонтакта(Контакт)
	
	ФИО = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контакт, "Фамилия, Имя, Отчество");
	Возврат СокрЛП(СтрШаблон("%1 %2 %3", ФИО.Фамилия, ФИО.Имя, ФИО.Отчество)); 
	
КонецФункции

#КонецОбласти 
