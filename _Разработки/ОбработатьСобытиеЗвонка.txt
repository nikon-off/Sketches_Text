// Процедура вызывается в момент, когда АТС отправляет в CRM POST-запрос, уведомляющий о начале разговора (cmd=event,type=ACCEPTED).
// Эта процедура формирует событие и открывает его форму ответственному за звонок сотруднику
//
// Параметры:
//  ПараметрыТела - Структура - Содержит свойства:
//    callid 	- Строка - идентификатор звонка
//    type 		- Строка - тип события (incoming/outgoing/accepted/completed/cancelled)
//    user 		- Строка - идентификатор пользователя облачной	АТС	(необходим для	сопоставления на стороне CRM) 
//    phone 	- Строка - номер телефона клиента
//	  ext		- Строка - внутренний номер пользователя облачной АТС, если есть (необязательный параметр)
//    diversion - Строка - номер телефона, через который прошел звонок (необязательный параметр)
//	  telnum	- Строка - прямой телефонный номер пользователя облачной АТС (необязательный параметр)
//  Автор		  - СправочникСсылка.Пользователи - Пользователь, который будет назначен ответственным за сформированный тел.звонок и событие 
//
Процедура ОбработатьСобытиеЗвонка(ВидАТС, ПараметрыТела, ЗаписьЖурнала) Экспорт
	
	Автор = Справочники.Пользователи.Система;
	
	СтруктураЗвонка = ПолучитьСтруктуруДляЗаполненияЗвонка();
	
	// callid - идентификатор звонка
	СтруктураЗвонка.ИдентификаторЗвонка = ПараметрыТела.callid;
	
	// type  - тип события 
	СтруктураЗвонка.ВходящийЗвонок = Ложь;
	Если НРег(ПараметрыТела.type) = "incoming" Тогда
		ТипОповещения = "ВходящийНачало";
		СтруктураЗвонка.ВходящийЗвонок = Истина;
	ИначеЕсли НРег(ПараметрыТела.type) = "outgoing" Тогда
		ТипОповещения = "ИсходящийНачало";
		СтруктураЗвонка.ВходящийЗвонок = Ложь;
	ИначеЕсли НРег(ПараметрыТела.type) = "accepted" Тогда
		ТипОповещения = "НачалоРазговора";
		
		//direction - тип звонка in/out (входящий/исходящий)
		Если НРег(ПараметрыТела.direction) = "in" Тогда
			СтруктураЗвонка.ВходящийЗвонок = Истина;	
		КонецЕсли;
	ИначеЕсли НРег(ПараметрыТела.type) = "completed" Или НРег(ПараметрыТела.type) = "cancelled" Тогда
		ТипОповещения = "Завершен";   
		Если НРег(ПараметрыТела.direction) = "in" Тогда
			СтруктураЗвонка.ВходящийЗвонок = Истина;	
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	// phone - номер клиента
	СтруктураЗвонка.ТелефонКонтакта = ПараметрыТела.phone;
	
	// user - логин сотрудника
	СтруктураЗвонка.Логин = ПараметрыТела.user; 
	
	// diversion - телефон сотрудника
	Если ПараметрыТела.Свойство("diversion") Тогда
		СтруктураЗвонка.ВнешнийНомер = ПараметрыТела.diversion;	
	ИначеЕсли ПараметрыТела.Свойство("telnum") Тогда
		СтруктураЗвонка.ВнешнийНомер = ПараметрыТела.telnum;
	КонецЕсли;
	
	Если ПараметрыТела.Свойство("ext") Тогда
		СтруктураЗвонка.ТелефонСотрудника = ПараметрыТела.ext;
	КонецЕсли;	
	
	Если ТипОповещения = "НачалоРазговора" Тогда
		СтруктураЗвонка.СостояниеЗвонка = Перечисления.сфпСостоянияЗвонков.Отвеченный;
	Иначе
		СтруктураЗвонка.СостояниеЗвонка = Перечисления.сфпСостоянияЗвонков.Пропущенный;
	КонецЕсли;
	
	СтруктураЗвонка.Дата = ТекущаяДатаСеанса();	
	СтруктураЗвонка.Автор = Автор; 
	СтруктураЗвонка.Ответственный = РегистрыСведений.ДанныеДоступаАТС.ПолучитьПользователяПоЛогину(ВидАТС, СтруктураЗвонка.Логин + "%");
	
	// Формируем звонок 
	ТелЗвонок = СоздатьИзменитьТелефонныйЗвонок(ВидАТС, СтруктураЗвонка, ЗаписьЖурнала); 
	РеквизитыЗвонка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТелЗвонок, "Ответственный,АбонентПредставление"); 
	
	// Формируем событие  
	Если ЗначениеЗаполнено(ТелЗвонок) Тогда
		СтруктураЗвонка.НовыйЗвонок = ТелЗвонок;   
		
		Первичный = Истина;
		Если ТипОповещения = "ВходящийНачало" Тогда //Создаем сделку сразу
			Сделка = СоздатьПолучитьСделку(ТелЗвонок);   
		ИначеЕсли ТипОповещения = "НачалоРазговора" Тогда //Создаем событие только в том случае, если разговор начался 
			Событие = СоздатьПолучитьСобытие(СтруктураЗвонка);		
			
			Если ЗначениеЗаполнено(Событие) Тогда	
				Дата = Событие.Дата;  
				Сделка = Документы.Сделка.ПолучитьСделкуПоДокументу(Событие);
			Иначе
				Дата = Неопределено;  
				Сделка = Неопределено;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Сделка) И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сделка, "Основание") <> Событие Тогда
				Первичный = Ложь;
			КонецЕсли; 
		Иначе
			Событие = Неопределено;
			Дата = Неопределено;  
			Сделка = Неопределено; 
		КонецЕсли; 
		
		Если СтруктураЗвонка.ВходящийЗвонок Тогда  
			Если ИспользоватьНовыйВариант() Тогда
				Если Первичный Тогда
					НаименованиеДействия	= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриПервичномВходящемЗвонке", РеквизитыЗвонка.Ответственный);
				Иначе	
					НаименованиеДействия	= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВторичномВходящемЗвонке", РеквизитыЗвонка.Ответственный);
				КонецЕсли;
			Иначе	
				НаименованиеДействия		= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВходящемЗвонке", РеквизитыЗвонка.Ответственный);
			КонецЕсли;				
		Иначе	
			НаименованиеДействия			= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриИсходящемЗвонке", РеквизитыЗвонка.Ответственный);	
		КонецЕсли;
		ОткрыватьУведомлениеОЗвонке		= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпОткрыватьУведомлениеОЗвонке", РеквизитыЗвонка.Ответственный);
		
		Если НЕ (НаименованиеДействия = "Открыть событие" Или НаименованиеДействия = "Открыть сделку" или ОткрыватьУведомлениеОЗвонке) Тогда
			Возврат;
		КонецЕсли;  
		
		Контакт = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураЗвонка.НовыйЗвонок, "АбонентКонтакт");
		Если ТипЗнч(Контакт) = Тип("СправочникСсылка.Партнеры") Тогда				
			Партнер = Контакт;				
		ИначеЕсли ТипЗнч(Контакт) = Тип("СправочникСсылка.ФизическиеЛица") Тогда				
			Партнер = Справочники.ФизическиеЛица.ПолучитьПартнера(Контакт, Истина);				
		КонецЕсли;
		
		Если ВидАТС = Перечисления.ВидыАТС.Мегафон Тогда
			Период = УПДК_ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("ПериодОткрытияЗвонков_Мегафон") * 60 * 60;
		ИначеЕсли ВидАТС = Перечисления.ВидыАТС.УралМикро Тогда	
			Период = УПДК_ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("ПериодОткрытияЗвонков_УралМикро") * 60 * 60; 
		Иначе
			Период = 0;
		КонецЕсли;
		
		Если Период > 0 И ТипОповещения <> "ВходящийНачало" Тогда	
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	CRM_Событие.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.CRM_Событие КАК CRM_Событие
			|ГДЕ
			|	CRM_Событие.Партнер = &Партнер
			|	И CRM_Событие.Дата > &Дата
			|	И CRM_Событие.ВидСобытия = &ВидСобытия";
			
			Запрос.УстановитьПараметр("ВидСобытия", Перечисления.CRM_ВидыСобытий.ТелефонныйЗвонок);
			Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса() - Период);
			Запрос.УстановитьПараметр("Партнер", Партнер);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда				
				НаименованиеДействия = "Не " + НаименованиеДействия;				
			КонецЕсли;			
		КонецЕсли;
		
		Если ТипОповещения <> "ВходящийНачало" И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Партнер, "ЭтоСотрудник") Тогда
			НаименованиеДействия = "Не " + НаименованиеДействия;
		КонецЕсли;	
		
		ОтправитьДанныеПользователюНаКлиент(
		ТипОповещения,
		РеквизитыЗвонка.Ответственный,
		СтруктураЗвонка.ТелефонКонтакта,
		РеквизитыЗвонка.АбонентПредставление,
		Дата,
		Событие,
		Сделка,
		СтруктураЗвонка.ИдентификаторЗвонка,
		НаименованиеДействия,
		ОткрыватьУведомлениеОЗвонке); 
		
	КонецЕсли;
	
КонецПроцедуры
