
ЗаписьЖурнала = РегистрыСведений.ЖурналОбменаAPI.ДобавитьЗапросВЖурнал("Онлайн заявка", ТекущаяДатаСеанса(), ТелоHTTPЗапроса.ПолучитьТелоКакСтроку());

КартаМаршрута = Параметры.КартаМаршрута;
ТочкаСтарта = Параметры.ТочкаСтарта; 
Тема = Параметры.Тема;
Автор = Параметры.Автор;
КаналИсточника = Параметры.КаналИсточника;
СоздатьНовуюСделку = Параметры.СоздатьНовуюСделку;

ИнформацияОСобытии = СтруктураЗаявки.contacts;
НомерТелефона = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(ИнформацияОСобытии.phone); 
Если ИнформацияОСобытии.Свойство("email") Тогда
	Email = СокрЛП(ИнформацияОСобытии.email);
Иначе
	Email = Неопределено;
КонецЕсли; 

url = "";
Попытка
url = СтруктураЗаявки.referer.urlsite;
Исключение
url = "Нету. Что то пошло не так";
КонецПопытки;

Попытка
	
	НачатьТранзакцию();  
	БизнесПроцесс = БизнесПроцессы.CRM_БизнесПроцесс.СоздатьБизнесПроцесс();
	
	БизнесПроцесс.КартаМаршрута = КартаМаршрута;
	БизнесПроцесс.ДатаСтарта = ТекущаяДатаСеанса();
	БизнесПроцесс.Наименование = Тема;
	БизнесПроцесс.Организация = Справочники.Организации.ОсновнаяОрганизация; 
	БизнесПроцесс.Дата = ТекущаяДатаСеанса();
	БизнесПроцесс.Состояние = Перечисления.СостоянияБизнесПроцессов.Активен;
	БизнесПроцесс.НомерВерсииКартыМаршрута = КартаМаршрута.НомерВерсии;
	БизнесПроцесс.ТочкаСтарта = ТочкаСтарта;
	БизнесПроцесс.Автор = Автор;
	БизнесПроцесс.Телефон = Справочники.ШаблоныНомеровТелефонов.ОбработатьНомерТелефонаПоМаске(НомерТелефона);																																																
	
	ЗаполнитьЗначенияСвойств(БизнесПроцесс, УПДК_ФизическиеЛица.ПоискКлиентаПоНомеруТелефона(НомерТелефона));
	
	Если Не ЗначениеЗаполнено(БизнесПроцесс.Партнер) И ЗначениеЗаполнено(Email) Тогда
		ЗаполнитьЗначенияСвойств(БизнесПроцесс, УПДК_ФизическиеЛица.ПоискКлиентаПоEmail(Email)); 
	КонецЕсли;                       
	
	Если СтруктураЗаявки.Свойство("data") И СтруктураЗаявки.data.Свойство("flatIdC") Тогда
		УИДСтрокой = СтруктураЗаявки.data.flatIdC;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УИДСтрокой) И СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(УИДСтрокой) Тогда
		
		УИД = Новый УникальныйИдентификатор(УИДСтрокой);
		ОбъектНедвижимости = Справочники.УПДК_ОбъектыНедвижимости.ПолучитьСсылку(УИД);                
		
		Если ОбщегоНазначения.СсылкаСуществует(ОбъектНедвижимости) Тогда
			БизнесПроцесс.ОбъектНедвижимости = ОбъектНедвижимости;
		КонецЕсли;
		
	КонецЕсли;

	Если СоздатьНовуюСделку Тогда
	НовыйКлиент = Ложь;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(БизнесПроцесс.Партнер) Тогда                           
		
	 
		ФИО = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ИнформацияОСобытии, "name", "Неопределенный контакт");
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ФИО, " ");
		
		КоличествоСлов = МассивПодстрок.Количество();
		
		Фамилия = "";
		Имя = "";
		Отчество = "";
		
		Если КоличествоСлов > 0 Тогда		
			Фамилия = МассивПодстрок[0]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 1 Тогда		
			Имя = МассивПодстрок[1]; 		
		КонецЕсли;
		
		Если КоличествоСлов > 2 Тогда
			
			Отчество = "";
			
			Для Счетчик = 2 по КоличествоСлов-1 Цикл
				Отчество = Отчество + " " + МассивПодстрок[Счетчик];
			КонецЦикла;
			
			Отчество = СокрЛП(Отчество);
			
		КонецЕсли;
		
		НовФизлицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
		УправлениеКонтактнойИнформацией.ДобавитьНовыйТелефон(НовФизлицо, НомерТелефона);
		
		Если ЗначениеЗаполнено(Email) Тогда
			
			НовКИ = НовФизлицо.КонтактнаяИнформация.Добавить();
			НовКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица;
			НовКИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			НовКИ.Представление = Email;
			НовКИ.АдресЭП = Email;
			
		КонецЕсли;	
		
		НовФизлицо.Фамилия = Фамилия;
		НовФизлицо.Имя = Имя;
		НовФизлицо.Отчество = Отчество; 	
		НовФизлицо.Наименование = ФИО;
		НовФизлицо.Записать(); 
		
		НовКонтакт = Справочники.Партнеры.СоздатьЭлемент();
		НовКонтакт.ДатаРегистрации = ТекущаяДатаСеанса();
		НовКонтакт.Наименование = ФИО;
		НовКонтакт.CRM_ФизЛицо = Истина;
		НовКонтакт.ВидПартнера = Перечисления.ВидПартнера.ЧастноеЛицо;				
		НовКонтакт.ОсновноеКонтактноеЛицо = НовФизлицо.Ссылка;
		
		НовКЛ = НовКонтакт.КонтактныеЛица.Добавить();
		НовКл.ФизЛицо = НовФизлицо.Ссылка;
		НовКл.ПравоПодписи = Истина;
		
		НовКонтакт.Записать();
		
		РегистрыСведений.СтатусыКлиентов.УстановитьСтатусКлиента(НовКонтакт.Ссылка, Перечисления.СтатусыКлиента.Контакт);
		
		
		БизнесПроцесс.Партнер = НовКонтакт.Ссылка;
		БизнесПроцесс.КонтактноеЛицо = НовФизлицо.Ссылка;

	Если СоздатьНовуюСделку Тогда
	НовыйКлиент = Истина;
	КонецЕсли;																						 
		
	ИначеЕсли Не СоздатьНовуюСделку Тогда
 //--------------------------------------Склеиваем задачи ---------------------------------
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка КАК Ссылка
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	НЕ ЗадачаИсполнителя.БизнесПроцесс.Завершен
		|	И ЗадачаИсполнителя.БизнесПроцесс.Стартован
		|	И ЗадачаИсполнителя.БизнесПроцесс.ДатаСтарта >= &ДатаСтарта
		|	И ЗадачаИсполнителя.БизнесПроцесс.КартаМаршрута = &КартаМаршрута
		|	И НЕ ЗадачаИсполнителя.Выполнена
		|	И ЗадачаИсполнителя.БизнесПроцесс.Партнер = &Партнер";
		
		Запрос.УстановитьПараметр("ДатаСтарта", ТекущаяДата()-24*60*60);
		Запрос.УстановитьПараметр("КартаМаршрута", КартаМаршрута);
		Запрос.УстановитьПараметр("Партнер", БизнесПроцесс.Партнер);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			ЗадачаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			
			Если СтруктураЗаявки.Свойство("data") И СтруктураЗаявки.data.Свойство("comment") Тогда
				Комментарий = СтруктураЗаявки.data.comment;
			Иначе
				Комментарий = "";
			КонецЕсли;
			
			
			ЗадачаОбъект.Описание = ЗадачаОбъект.Описание + Символы.ПС + "Аналогичная заявка от клиента от " + Строка(ТекущаяДата()) + Символы.ПС + Комментарий + Символы.ПС + "url - " + url;
			
			ЗадачаОбъект.Записать();
			
			ЗафиксироватьТранзакцию();
			
			Ответ = Новый HTTPСервисОтвет(200);
			Ответ.УстановитьТелоИзСтроки("Success");
			
			Перейти ~КонецОбработки;			
			
		КонецЕсли;
		
	КонецЕсли;	
	
	БизнесПроцесс.Основание = БизнесПроцесс.Партнер;
	
	БизнесПроцесс.Записать();

СвязанноеСобытие = Документы.CRM_Событие.СоздатьДокумент();



ДанныеЗаполнения = Новый Структура;



ДанныеЗаполнения.Вставить("Партнер", 			БизнесПроцесс.Партнер);

ДанныеЗаполнения.Вставить("КонтактноеЛицо", 	БизнесПроцесс.КонтактноеЛицо);

ДанныеЗаполнения.Вставить("Предмет", 			БизнесПроцесс.ОбъектНедвижимости);

ДанныеЗаполнения.Вставить("Автор", 				Автор);

ДанныеЗаполнения.Вставить("Ответственный", 		Автор);

ДанныеЗаполнения.Вставить("Место", 				БизнесПроцесс.Телефон);



СвязанноеСобытие.Заполнить(ДанныеЗаполнения);


СвязанноеСобытие.Проект = Параметры.ВидСобытия;

СвязанноеСобытие.Тема = Тема; 		

СвязанноеСобытие.СостояниеСобытия = Справочники.CRM_СостоянияСобытий.Запланировано;

СвязанноеСобытие.Записать();

	Если Не НовыйКлиент Тогда
		Документы.Сделка.ДобавитьНовуюСделку(СвязанноеСобытие.Ссылка);
	КонецЕсли;


	БизнесПроцесс.Старт();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачаИсполнителя.Ссылка КАК Ссылка
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс";
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();  
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ЗадачаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		
		Если СтруктураЗаявки.Свойство("data") И СтруктураЗаявки.data.Свойство("comment") Тогда
			Комментарий = "Представление клиента: " + ФИО + Символы.ПС + СтруктураЗаявки.data.comment;
		Иначе
			Комментарий = "";
		КонецЕсли;
				
		ЗадачаОбъект.Описание = Тема + Символы.ПС + Комментарий + Символы.ПС + "url - " + url;
		
		ЗадачаОбъект.Записать();
		
	КонецЦикла; 
	
	UTM = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураЗаявки.data, "utm", Новый Структура);
		
	СтруктураМеток = Новый Структура; 	
	СтруктураМеток.Вставить("utm_source", 	ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(UTM, "utm_source", ""));
	СтруктураМеток.Вставить("utm_medium", 	ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(UTM, "utm_medium", ""));
	СтруктураМеток.Вставить("utm_campaign", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(UTM, "utm_campaign", "<не+указано>"));
	СтруктураМеток.Вставить("utm_term", 	ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(UTM, "utm_term", "")); 
	СтруктураМеток.Вставить("utm_content", 	ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(UTM, "utm_content", ""));
	
	ТекДата = ТекущаяДатаСеанса();
	ИсточникСсылка = Справочники.МаркетинговыеМероприятия.НайтиСоздатьИсточник(СтруктураМеток);
	
	НаборЗаписей = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сделка.Установить(БизнесПроцесс.Ссылка);			
	НаборЗаписей.Отбор.Партнер.Установить(БизнесПроцесс.Партнер);	
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекДата;
	Запись.КаналПервичногоИнтереса = КаналИсточника;
	Запись.ИсточникПервичногоИнтереса = ИсточникСсылка;	
	Запись.Партнер = БизнесПроцесс.Партнер;
	Запись.Сделка = БизнесПроцесс.Ссылка;	
	
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ДанныеКонтекстнойРекламы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Клиент.Установить(БизнесПроцесс.Партнер);	
	НаборЗаписей.Отбор.Период.Установить(ТекДата);
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекДата;
	Запись.Клиент = БизнесПроцесс.Партнер;
	ЗаполнитьЗначенияСвойств(Запись, СтруктураМеток);
	Запись.ИсточникСсылка = ИсточникСсылка;
	
	НаборЗаписей.Записать();
		
	ЗафиксироватьТранзакцию();
	
	РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала, ТекущаяДатаСеанса(), 200, "Успешно", БизнесПроцесс.Ссылка);


Исключение
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
	РегистрыСведений.ЖурналОбменаAPI.ДобавитьОтветВЖурнал(ЗаписьЖурнала, ТекущаяДатаСеанса(), 500, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	
	Ответ = Новый HTTPСервисОтвет(500);	
	Ответ.УстановитьТелоИзСтроки(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	Перейти ~КонецОбработки;
	
КонецПопытки; 

Ответ = Новый HTTPСервисОтвет(200);
Ответ.УстановитьТелоИзСтроки("Success");

~КонецОбработки:

//Ответ.УстановитьТелоИзСтроки(ТелоHTTPЗапроса.ПолучитьТелоКакСтроку());