#Область ОбработчикиСобытийФормы	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Если Объект.Шаг = 0 Тогда
	//    Объект.Шаг = 1;
	//КонецЕсли;  
	//ИнициализироватьТаблицуПоискаПартнеров();
	////ИнтеграцияДвижВключена = ИнтеграцияДвижСервер.ПолучитьНастройкиДоступа().Использовать; 
	//ИнтеграцияДвижВключена = Ложь;    
	//Если ИнтеграцияДвижВключена Тогда
	//    Объект.Интеграция = "Движ";
	//Иначе
	//	Объект.Интеграция = "";	
	//КонецЕсли;    
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Html = ПостроитьHtml();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Функция ПостроитьHtml()
	
	МакетФайла = Обработки.CRM_Мессенджер.ПолучитьМакет("index_мессенджер");     
	ТекстDOC   = ВернутьМетаТекстом(МакетФайла);
	
	ЧтениеHTML = Новый ЧтениеHTML;
	
	ЧтениеHTML.УстановитьСтроку(ТекстDOC);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);  
	
	СкриптСДанными = ДокументHTML.СоздатьЭлемент("script");   
	Запись = Новый ЗаписьJSON;   
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,, Истина, Истина, Истина, Истина, Истина));
	
	ЗаписатьJSON(Запись, ПолучитьЧаты(0));
	json = Запись.Закрыть(); 
	
	Запрещенные = Новый Массив;
	Запрещенные.Добавить("\b");
	Запрещенные.Добавить("\f");
	Запрещенные.Добавить("\n");
	Запрещенные.Добавить("\r");
	Запрещенные.Добавить("\t");
	Запрещенные.Добавить("\");
	//Запрещенные.Добавить("\\"); 
	Для каждого ТекСимвол Из Запрещенные Цикл
		json = СтрЗаменить(json, ТекСимвол, " ");
	КонецЦикла;
	//СкриптСДанными.ТекстовоеСодержимое = "document.events = '[" + json + "]'";
	СкриптСДанными.ТекстовоеСодержимое = СтрШаблон("document.events = '%1'",json);
	
	ДокументHTML.ПолучитьЭлементыПоИмени("html").Элемент(0).УдалитьДочерний(ДокументHTML.ПолучитьЭлементыПоИмени("html").Элемент(0).ПоследнийДочерний);   
	ДокументHTML.ПолучитьЭлементыПоИмени("html").Элемент(0).ДобавитьДочерний(СкриптСДанными);
	
	ЗаписьDOM = Новый ЗаписьDOM();
	ЗаписьHTML = Новый ЗаписьHTML();
	ЗаписьHTML.УстановитьСтроку();
	Попытка
		ЗаписьDOM.Записать(документHTML, ЗаписьHTML);
		ТекстDOC = ЗаписьHTML.Закрыть();
	Исключение
		ТекстDOC = "";
	КонецПопытки; 
	
	Возврат ТекстDOC;
	
КонецФункции  

Функция ПолучитьЧаты(ИндексЧата)
	
	ПолучитьЛоготипыМессенджеров();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|			ТОГДА CRM_СообщениеМессенджера.Контакт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|					ТОГДА ""Неизвестный контакт"" + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|				ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|			КОНЕЦ
	|	КОНЕЦ КАК Контакт,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|				ТОГДА CRM_СообщениеМессенджера.Контакт
	|			ИНАЧЕ ВЫБОР
	|					КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|						ТОГДА ""Неизвестный контакт""
	|					ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление
	|				КОНЕЦ
	|		КОНЕЦ) КАК КонтактНормальный
	|ПОМЕСТИТЬ ВТ_ВсеАккаунты
	|ИЗ
	|	Документ.CRM_СообщениеМессенджера КАК CRM_СообщениеМессенджера
	|ГДЕ
	|	НЕ CRM_СообщениеМессенджера.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|			ТОГДА CRM_СообщениеМессенджера.Контакт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|					ТОГДА ""Неизвестный контакт"" + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|				ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|			КОНЕЦ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеАккаунты.Контакт КАК Контакт,
	|	ВТ_ВсеАккаунты.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_ВсеАккаунты.КонтактНормальный КАК КонтактНормальный
	|ПОМЕСТИТЬ ВТ_АккаунтыСОтборомКоличества
	|ИЗ
	|	ВТ_ВсеАккаунты КАК ВТ_ВсеАккаунты
	|ГДЕ
	|	ВТ_ВсеАккаунты.НомерЗаписи МЕЖДУ &НомерС И &НомерПо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|			ТОГДА CRM_СообщениеМессенджера.Контакт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|					ТОГДА ""Неизвестный контакт"" + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|				ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|			КОНЕЦ
	|	КОНЕЦ КАК Контакт,
	|	CRM_СообщениеМессенджера.ID_Пользователя КАК ID_Пользователя,
	|	МАКСИМУМ(CRM_СообщениеМессенджера.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ДатыПоследнихСообщенийПоПользователям
	|ИЗ
	|	Документ.CRM_СообщениеМессенджера КАК CRM_СообщениеМессенджера
	|ГДЕ
	|	НЕ CRM_СообщениеМессенджера.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	CRM_СообщениеМессенджера.ID_Пользователя,
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|			ТОГДА CRM_СообщениеМессенджера.Контакт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|					ТОГДА ""Неизвестный контакт"" + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|				ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|			КОНЕЦ
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID_Пользователя,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДатыПоследнихСообщенийПоПользователям.ID_Пользователя КАК ID_Пользователя,
	|	ВТ_ДатыПоследнихСообщенийПоПользователям.Дата КАК Дата,
	|	CRM_СообщениеМессенджера.ТекстСообщения КАК ТекстСообщения,
	|	CRM_СообщениеМессенджера.Прочитано КАК Прочитано,
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|			ТОГДА CRM_СообщениеМессенджера.Контакт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|					ТОГДА ""Неизвестный контакт"" + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|				ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|			КОНЕЦ
	|	КОНЕЦ КАК Контакт,
	|	CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера КАК ТипМессенджера
	|ПОМЕСТИТЬ ВТ_ПоследниеСообщенияПоПользователямИАккаунтам
	|ИЗ
	|	ВТ_ДатыПоследнихСообщенийПоПользователям КАК ВТ_ДатыПоследнихСообщенийПоПользователям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.CRM_СообщениеМессенджера КАК CRM_СообщениеМессенджера
	|		ПО (ВТ_ДатыПоследнихСообщенийПоПользователям.Контакт = ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|					ТОГДА CRM_СообщениеМессенджера.Контакт
	|				ИНАЧЕ ВЫБОР
	|						КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|							ТОГДА ""Неизвестный контакт"" + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|						ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление + ""_/*"" + CRM_СообщениеМессенджера.ID_Пользователя
	|					КОНЕЦ
	|			КОНЕЦ)
	|			И ВТ_ДатыПоследнихСообщенийПоПользователям.ID_Пользователя = CRM_СообщениеМессенджера.ID_Пользователя
	|			И ВТ_ДатыПоследнихСообщенийПоПользователям.Дата = CRM_СообщениеМессенджера.Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID_Пользователя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТекстСообщения КАК ТекстСообщения,
	|	ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.Дата КАК Дата,
	|	ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.Прочитано КАК Прочитано,
	|	ВТ_АккаунтыСОтборомКоличества.КонтактНормальный КАК Контакт,
	|	ВЫБОР
	|		КОГДА ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТипМессенджера = ""ВКонтакте""
	|			ТОГДА ""Vk""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТипМессенджера = ""Telegram""
	|					ТОГДА ""Tg""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТипМессенджера = ""Whatsapp""
	|							ТОГДА ""Wp""
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТипМессенджера = ""Viber""
	|									ТОГДА ""Vb""
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТипМессенджера = ""Facebook""
	|											ТОГДА ""Fb""
	|										ИНАЧЕ ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ТипМессенджера
	|									КОНЕЦ
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипМессенджера,
	|	ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.ID_Пользователя КАК ID_Пользователя
	|ИЗ
	|	ВТ_АккаунтыСОтборомКоличества КАК ВТ_АккаунтыСОтборомКоличества
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеСообщенияПоПользователямИАккаунтам КАК ВТ_ПоследниеСообщенияПоПользователямИАккаунтам
	|		ПО ВТ_АккаунтыСОтборомКоличества.Контакт = ВТ_ПоследниеСообщенияПоПользователямИАккаунтам.Контакт
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтактНормальный";
	Запрос.УстановитьПараметр("НомерС", 0);
	Запрос.УстановитьПараметр("НомерПо", 40);
	
	РезультатЗапроса = Запрос.Выполнить();
	//РезультатЗапроса.Выгрузить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ПредыдущийКонтакт = Неопределено; 
	МассивРезультат = Новый Массив;
	
	Контакты = Новый Структура();  
	
	ХешИменМессенджеров = Новый Структура();	
	ХешИменМессенджеров.Вставить("Tg", 1); 
	ХешИменМессенджеров.Вставить("Vb", 1);
	ХешИменМессенджеров.Вставить("Wp", 1);
	ХешИменМессенджеров.Вставить("Fb", 1);
	ХешИменМессенджеров.Вставить("Vk", 1);
	
	ИмеющиесяМессенджеры = Новый Структура;
	
	Контакт = Новый Структура;	
	МассивМессенджеров = Новый Массив; 
	
	аа = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
		если ВыборкаДетальныеЗаписи.ТипМессенджера <> "Vb" Тогда
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Контакт) <> Тип("Строка") Тогда
				Если ПредыдущийКонтакт <> ВыборкаДетальныеЗаписи.Контакт Тогда
					Если ПредыдущийКонтакт <> Неопределено и ТипЗнч(ПредыдущийКонтакт) <> Тип("Строка") Тогда
						Для каждого ИмяМессенджера из ХешИменМессенджеров Цикл
							
							Если ИмеющиесяМессенджеры.Свойство(ИмяМессенджера.Ключ) = Ложь Тогда  
								//Мессенджер = Новый Структура;
								//Мессенджер.Вставить("AccountImage", ИмяМессенджера.Ключ);
								//Мессенджер.Вставить("NumberNew", "0");
								//Мессенджер.Вставить("IsValid", "false");
								МассивМессенджеров.Добавить(ПолучитьСтруктуруМессенджера(ИмяМессенджера.Ключ, Ложь));
								
							КонецЕсли;					
							
						КонецЦикла; 
						
						ИмеющиесяМессенджеры = Новый Структура;  
						аа.Добавить(МассивМессенджеров.Количество());
						Контакт.Вставить("Messengers", МассивМессенджеров);
						МассивРезультат.Добавить(Контакт);
					КонецЕсли;	
					ПредыдущийКонтакт = ВыборкаДетальныеЗаписи.Контакт;
					Контакт = Новый Структура;
					
					Контакт.Вставить("Index", "0");
					Контакт.Вставить("id", ВыборкаДетальныеЗаписи.ID_Пользователя);
					//Контакт.Вставить("NameLabel", ВыборкаДетальныеЗаписи.Контакт);
					Контакт.Вставить("NameLabel", Строка(ВыборкаДетальныеЗаписи.Контакт));
					//Контакт.Вставить("DateLast", ВыборкаДетальныеЗаписи.Дата);
					Контакт.Вставить("DateLast", Формат(ВыборкаДетальныеЗаписи.Дата,"ДФ=гггг-ММ-ддTчч:мм:ссZ"));
					Контакт.Вставить("LastMessage", УбратьКавычки(ВыборкаДетальныеЗаписи.ТекстСообщения));
					Контакт.Вставить("TypeContact", "Клиент"); 
					Контакт.Вставить("NumberNew", "2");
					
					МассивМессенджеров = Новый Массив; 
					//Мессенджер = Новый Структура;  
					ИмяМессенджера = ВыборкаДетальныеЗаписи.ТипМессенджера;
					//Мессенджер.Вставить("AccountImage", ИмяМессенджера);
					//Мессенджер.Вставить("NumberNew", "0");
					//Мессенджер.Вставить("IsValid", "true");	 
					ИмеющиесяМессенджеры.Вставить("" + ИмяМессенджера, 1);
					МассивМессенджеров.Добавить(ПолучитьСтруктуруМессенджера(ИмяМессенджера, ИСТИНА));	
					
					
				Иначе  
					ИмяМессенджера = ВыборкаДетальныеЗаписи.ТипМессенджера;	
					//Мессенджер = Новый Структура;
					//Мессенджер.Вставить("AccountImage", ИмяМессенджера);
					//Мессенджер.Вставить("NumberNew", "0");
					//Мессенджер.Вставить("IsValid", "true"); 
					ИмеющиесяМессенджеры.Вставить("" + ИмяМессенджера, 1);
					МассивМессенджеров.Добавить(ПолучитьСтруктуруМессенджера(ИмяМессенджера, ИСТИНА));
					
				КонецЕсли;  
			Иначе   // Если контакт не ссылочный, тогда у него может быть только один активный мессенджер, ибо никак нельзя связать контакты правильно 
				Контакт = Новый Структура;
				
				Контакт.Вставить("Index", "0");  
				Контакт.Вставить("id", ВыборкаДетальныеЗаписи.ID_Пользователя);
				//Контакт.Вставить("NameLabel", ВыборкаДетальныеЗаписи.Контакт);
				Контакт.Вставить("NameLabel", Строка(ВыборкаДетальныеЗаписи.Контакт));
				//Контакт.Вставить("DateLast", ВыборкаДетальныеЗаписи.Дата);
				Контакт.Вставить("DateLast", Формат(ВыборкаДетальныеЗаписи.Дата,"ДФ=гггг-ММ-ддTчч:мм:ссZ"));
				Контакт.Вставить("LastMessage", УбратьКавычки(ВыборкаДетальныеЗаписи.ТекстСообщения));
				Контакт.Вставить("TypeContact", "Клиент"); 
				Контакт.Вставить("NumberNew", "0"); 
				
				МассивМессенджеров = Новый Массив; 
				ИмяМессенджера = ВыборкаДетальныеЗаписи.ТипМессенджера; 
				Для каждого ИмяМессенджера из ХешИменМессенджеров Цикл 
					Мессенджер = Новый Структура;
					Если ХешИменМессенджеров.Свойство(ИмяМессенджера) = Истина Тогда
						Мессенджер = ПолучитьСтруктуруМессенджера(ВыборкаДетальныеЗаписи.ТипМессенджера, ИСТИНА);
						//Мессенджер.Вставить("AccountImage", ВыборкаДетальныеЗаписи.ТипМессенджера);
						//Мессенджер.Вставить("NumberNew", "0");
						//Мессенджер.Вставить("IsValid", "true"); 
						ИмяМессенджера = "";
					Иначе
						Мессенджер = ПолучитьСтруктуруМессенджера(ИмяМессенджера.Ключ, Ложь);
						//Мессенджер.Вставить("AccountImage", ИмяМессенджера.Ключ);
						//Мессенджер.Вставить("NumberNew", "0");
						//Мессенджер.Вставить("IsValid", "false");  
					КонецЕсли; 
					МассивМессенджеров.Добавить(Мессенджер);
				КонецЦикла;
				аа.Добавить(МассивМессенджеров.Количество());
				Контакт.Вставить("Messengers", МассивМессенджеров);
				МассивРезультат.Добавить(Контакт);
			КонецЕсли;	
			
			
		КонецЕсли;
		//Контакт.Очистить();
	КонецЦикла;   
	
	Если ПредыдущийКонтакт <> Неопределено и ТипЗнч(ПредыдущийКонтакт) <> Тип("Строка") Тогда
		Для каждого ИмяМессенджера из ХешИменМессенджеров Цикл
			
			Если ИмеющиесяМессенджеры.Свойство(ИмяМессенджера.Ключ) = Ложь Тогда  
				//Мессенджер = Новый Структура;
				//Мессенджер.Вставить("AccountImage", ИмяМессенджера.Ключ);
				//Мессенджер.Вставить("NumberNew", "0");
				//Мессенджер.Вставить("IsValid", "false");
				МассивМессенджеров.Добавить(ПолучитьСтруктуруМессенджера(ИмяМессенджера.Ключ, Ложь));
				
			КонецЕсли;					
			
		КонецЦикла;
		аа.Добавить(МассивМессенджеров.Количество());
		
		ИмеющиесяМессенджеры = Новый Структура;
		Контакт.Вставить("Messengers", МассивМессенджеров);
		МассивРезультат.Добавить(Контакт);
	КонецЕсли;
	
	Контакты.Вставить("contacts", МассивРезультат);
	Контакты.Вставить("Messages",  ПолучитьСообщенияКонтакта(ВыборкаДетальныеЗаписи.ID_Пользователя, 10));
	Контакты.Вставить("GeneralAccountName", "Гена Букин");
	
	масс = Новый Массив;
	масс.Добавить(Контакты);
	
	Возврат масс; 
	
		а=1;	
	
КонецФункции // ПолучитьДанные()  

Функция ПолучитьСтруктуруМессенджера(AccountImage, IsValid)
	Мессенджер = Новый Структура;
	Мессенджер.Вставить("AccountImage", AccountImage);
	Мессенджер.Вставить("NumberNew", "0");
	Мессенджер.Вставить("IsValid", IsValid);	
	
	Возврат Мессенджер;
КонецФункции // ПолучитьСтруктуруЧата()

Функция ЗаполнитьТаблицуСообщений(IdКонтакта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	CRM_СообщениеМессенджера.Контакт КАК Контакт,
	|	CRM_СообщениеМессенджера.ID_Пользователя КАК ID_Пользователя,
	|	CRM_СообщениеМессенджера.ТекстСообщения КАК ТекстСообщения,
	|	CRM_СообщениеМессенджера.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.Контакт <> НЕОПРЕДЕЛЕНО
	|			ТОГДА CRM_СообщениеМессенджера.Контакт
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.КонтактПредставление = """"
	|					ТОГДА ""Неизвестный контакт""
	|				ИНАЧЕ CRM_СообщениеМессенджера.КонтактПредставление
	|			КОНЕЦ
	|	КОНЕЦ КАК КонтактСтрока,
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера = ""ВКонтакте""
	|			ТОГДА ""vk""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера = ""Telegram""
	|					ТОГДА ""telegram""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера = ""Whatsapp""
	|							ТОГДА ""whatsapp""
	|						ИНАЧЕ ВЫБОР
	|								КОГДА CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера = ""Viber""
	|									ТОГДА ""viber""
	|								ИНАЧЕ ВЫБОР
	|										КОГДА CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера = ""Facebook""
	|											ТОГДА ""facebook""
	|										ИНАЧЕ CRM_СообщениеМессенджера.УчетнаяЗапись.ТипМессенджера
	|									КОНЕЦ
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК КартинкаМессенджера,
	|	ВЫБОР
	|		КОГДА CRM_СообщениеМессенджера.ВидСообщения = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСообщенияМессенджера.Входящее)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВходящее
	|ИЗ
	|	Документ.CRM_СообщениеМессенджера КАК CRM_СообщениеМессенджера
	|ГДЕ
	|	НЕ CRM_СообщениеМессенджера.ПометкаУдаления
	|	И CRM_СообщениеМессенджера.ID_Пользователя = &ID_Пользователя
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ID_Пользователя", IdКонтакта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СообщенияПользователя.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	а=1;	
	
КонецФункции // ЗаполнитьТаблицуСообщений()

Функция ПолучитьСообщенияКонтакта(IdКонтакта, ИндексПоследнегоСообщения)

	ЗаполнитьТаблицуСообщений(IdКонтакта);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВсеСообщенияПользователяСортДата.Дата КАК Дата,
	|	ВсеСообщенияПользователяСортДата.Контакт КАК Контакт,
	|	ВсеСообщенияПользователяСортДата.КонтактСтрока КАК КонтактСтрока,
	|	ВсеСообщенияПользователяСортДата.ID_Пользователя КАК ID_Пользователя,
	|	ВсеСообщенияПользователяСортДата.ТекстСообщения КАК ТекстСообщения,
	|	ВсеСообщенияПользователяСортДата.КартинкаМессенджера КАК КартинкаМессенджера,
	|	ВсеСообщенияПользователяСортДата.ЭтоВходящее КАК ЭтоВходящее,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСообщения
	|ПОМЕСТИТЬ ВТ_Сообщения
	|ИЗ
	|	&ВсеСообщенияПользователяСортДата КАК ВсеСообщенияПользователяСортДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сообщения.Дата КАК Дата,
	|	ВТ_Сообщения.Контакт КАК Контакт,
	|	ВТ_Сообщения.КонтактСтрока КАК КонтактСтрока,
	|	ВТ_Сообщения.ID_Пользователя КАК ID_Пользователя,
	|	ВТ_Сообщения.ТекстСообщения КАК ТекстСообщения,
	|	ВТ_Сообщения.НомерСообщения КАК НомерСообщения,
	|	ВТ_Сообщения.ЭтоВходящее КАК ЭтоВходящее,
	|	ВТ_Сообщения.КартинкаМессенджера КАК КартинкаМессенджера
	|ИЗ
	|	ВТ_Сообщения КАК ВТ_Сообщения
	|ГДЕ
	|	ВТ_Сообщения.НомерСообщения МЕЖДУ &НомерС И &НомерПо";
	
	Запрос.УстановитьПараметр("ВсеСообщенияПользователяСортДата", СообщенияПользователя.выгрузить());
	Запрос.УстановитьПараметр("НомерС", 0);
	Запрос.УстановитьПараметр("НомерПо", ИндексПоследнегоСообщения);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Сообщения = Новый Структура;
	МассивСообщений = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщение = Новый Структура;
		Сообщение.Вставить("SenderID", ВыборкаДетальныеЗаписи.ID_Пользователя);
		Сообщение.Вставить("Index", ВыборкаДетальныеЗаписи.НомерСообщения);
		Сообщение.Вставить("AccountImage", ВыборкаДетальныеЗаписи.КартинкаМессенджера);
		Сообщение.Вставить("SenderName", ВыборкаДетальныеЗаписи.КонтактСтрока);
		Сообщение.Вставить("TextMessage", ВыборкаДетальныеЗаписи.ТекстСообщения);
		//Сообщение.Вставить("DateMessage", ВыборкаДетальныеЗаписи.Дата);  
		Сообщение.Вставить("DateMessage", Формат(ВыборкаДетальныеЗаписи.Дата, "ДФ=гггг-ММ-ддTчч:мм:ссZ"));  
		Сообщение.Вставить("IsIncoming", ВыборкаДетальныеЗаписи.ЭтоВходящее);
		
		МассивСообщений.Добавить(Сообщение);
	КонецЦикла;    
	
	//Сообщения.Вставить("Messages", МассивСообщений);
	
	Возврат МассивСообщений;
	//«Messages»: [{«SenderID:» «519367729»,  «Index»: «1», «AccountImage»: «Vk», SenderName: «Елизавета Яковлева», «TextMessage» «Hello! How are you?», «DateMessage»: «09.03.2021 18:37:06», «IsIncoming»: «true»}]
	
	
КонецФункции // ПолучитьСообщенияКонтакта()

Процедура КонтактыОбновить(ПриСозданииНаСервере = Ложь)    
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьМетаТекстом(ДД)
	
	ФайлTXT = Новый ТекстовыйДокумент;
	
	ВрПоток = ДД.ОткрытьПотокДляЧтения();
	
	ФайлTXT.Прочитать(ВрПоток);
	
	Возврат ФайлTXT.ПолучитьТекст();
	
КонецФункции
#КонецОбласти   

&НаСервере
Процедура ПолучитьЛоготипыМессенджеров()
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	CRM_УчетныеЗаписиМессенджеров.ТипМессенджера КАК ТипМессенджера
	|ИЗ
	|	Справочник.CRM_УчетныеЗаписиМессенджеров КАК CRM_УчетныеЗаписиМессенджеров");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Метаданные.ОбщиеКартинки.Найти("Мессенджер"+Выборка.ТипМессенджера) <> Неопределено Тогда
			СтрокаКартинки = ПоместитьВоВременноеХранилище(БиблиотекаКартинок["Мессенджер"+Выборка.ТипМессенджера], УникальныйИдентификатор);
		Иначе
			СтрокаКартинки = "";
		КонецЕсли;
		НовЛого = ЛоготипыМессенджеров.Добавить();
		НовЛого.ТипМессенджера = Выборка.ТипМессенджера;
		НовЛого.Логотип = СтрокаКартинки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура HtmlПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ДанныеСобытия.Button <> Неопределено Тогда 
		TargetId = ДанныеСобытия.Button.id;
	Иначе
		TargetId = ДанныеСобытия.Event.Target.Id;
	КонецЕсли;

	Браузер = Элементы.Html.Документ;	
	Если Браузер = Неопределено Тогда
		Возврат;
	КонецЕсли;   
	
	СтандартнаяОбработка = Ложь;
	ПолучитьСообщенияКонтакта("1 254 785 213", 0);
	Если TargetId = "SelеctChat" Тогда 
		ВыбранныйIDКонтакта = Браузер.getSelectedContactID;
		Браузер.OpenMessagesFromChat(ПолучитьСообщенияКонтакта("79821018661@c.us", 0));
    КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция УбратьКавычки(Знач ТекЭлемент)
	
	ТекТип = ТипЗнч(ТекЭлемент);
	Если ТекТип = Тип("Структура") Тогда  
		Для каждого Вложенный Из ТекЭлемент Цикл 
			ТекЭлемент[Вложенный.Ключ] = УбратьКавычки(Вложенный.Значение);	
		КонецЦикла;
	ИначеЕсли ТекТип = Тип("Массив") Тогда  
		Для каждого Вложенный Из ТекЭлемент Цикл 
			Если ТипЗнч(Вложенный) = Тип("Строка") Тогда 
				ТекЭлемент.Вставить(ТекЭлемент.Индекс(Вложенный), УбратьКавычки(Вложенный));  
			ИначеЕсли ТипЗнч(Вложенный) = Тип("Структура") Тогда
				Для каждого Вложенный2 Из Вложенный Цикл  
					Если ТипЗнч(Вложенный2.Значение) = Тип("Строка") Тогда
						Вложенный[Вложенный2.Ключ] = УбратьКавычки(Вложенный2.Значение);
					ИначеЕсли ТипЗнч(Вложенный2.Значение) = Тип("Массив") Тогда
						Для каждого Вложенный3 Из Вложенный2.Значение Цикл  
							Если ТипЗнч(Вложенный3) = Тип("Структура") Тогда
								Для каждого Вложенный4 Из Вложенный3 Цикл
									Если ТипЗнч(Вложенный4) = Тип("Строка") Тогда
										Вложенный4[Вложенный3.Ключ] = УбратьКавычки(Вложенный3.Значение);
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;	
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
	ИначеЕсли ТекТип = Тип("Строка") Тогда
		Возврат СтрЗаменить(ТекЭлемент, """", "");
	КонецЕсли; 
	
	Возврат ТекЭлемент;

КонецФункции



//Функция ПолучитьСписокЗаявокВБанк(Запрос) Экспорт
//	
//	Ответ = Новый HTTPСервисОтвет(200);
//	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");

//	Попытка
//	    limit = Число(Запрос.ПараметрыЗапроса.Получить("limit"));
//	Исключение
//	    limit = 60;
//	КонецПопытки; 
//	Попытка
//	    offset = Число(Запрос.ПараметрыЗапроса.Получить("offset")) + 1;
//	Исключение
//	    offset = 1;
//	КонецПопытки; 	
//			
//	Результат = Новый Массив;	
//	
//	Запрос = Новый Запрос;
//	Запрос.УстановитьПараметр("НомерНачала", offset);
//	Запрос.УстановитьПараметр("НомерОкончания", offset + limit - 1);
//  	
//	Запрос.Текст = 	
//	"ВЫБРАТЬ ПЕРВЫЕ 5000
//	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
//	|	ЗаявкаАнкетаДляБанков.Ссылка КАК Ссылка,
//	|	ЗаявкаАнкетаДляБанков.Дата КАК Дата,
//	|	ЗаявкаАнкетаДляБанков.Статус КАК Статус,
//	|	ЗаявкаАнкетаДляБанков.Автор КАК Автор,
//	|	ЗаявкаАнкетаДляБанков.Ответственный КАК Ответственный
//	|ПОМЕСТИТЬ ОтобранныеДляПагинации
//	|ИЗ
//	|	Документ.ЗаявкаАнкетаДляБанков КАК ЗаявкаАнкетаДляБанков
//	|ГДЕ
//	|	НЕ ЗаявкаАнкетаДляБанков.ПометкаУдаления
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	ЗаявкаАнкетаДляБанков.Дата
//	|
//	|ИНДЕКСИРОВАТЬ ПО
//	|	НомерЗаписи
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	ОтобранныеДляПагинации.НомерЗаписи КАК НомерЗаписи,
//	|	ОтобранныеДляПагинации.Ссылка КАК Ссылка,
//	|	ОтобранныеДляПагинации.Дата КАК Дата,
//	|	ОтобранныеДляПагинации.Статус КАК Статус,
//	|	ОтобранныеДляПагинации.Автор КАК Автор,
//	|	ОтобранныеДляПагинации.Ответственный КАК Ответственный
//	|ИЗ
//	|	ОтобранныеДляПагинации КАК ОтобранныеДляПагинации
//	|ГДЕ
//	|	ОтобранныеДляПагинации.НомерЗаписи МЕЖДУ &НомерНачала И &НомерОкончания
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	КОЛИЧЕСТВО(ОтобранныеДляПагинации.НомерЗаписи) КАК Всего
//	|ИЗ
//	|	ОтобранныеДляПагинации КАК ОтобранныеДляПагинации";
//	
//	//Запрос.Текст = 
//	РезультатЗапроса = Запрос.ВыполнитьПакет();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  	
//		Результат.Добавить(Новый Структура("id,date,status,autor,responsible",
//		XMLСтрока(ВыборкаДетальныеЗаписи.Ссылка),
//		XMLСтрока(ВыборкаДетальныеЗаписи.Дата),
//		XMLСтрока(ВыборкаДетальныеЗаписи.Статус),
//		XMLСтрока(ВыборкаДетальныеЗаписи.Автор),
//		XMLСтрока(ВыборкаДетальныеЗаписи.Ответственный))); 	
//	КонецЦикла;
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса[2].Выбрать();     
//	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
//	    Всего = ВыборкаДетальныеЗаписи.Всего;
//	Иначе	
//	    Всего = 0;
//	КонецЕсли;
//	ТелоОтвета = СтрокаОтвета(Результат, Истина, "", Всего);
//	
//	Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
//	
//	Возврат Ответ;
//	
//КонецФункции
